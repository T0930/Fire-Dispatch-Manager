[{"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/index.js":"1","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/App.js":"2","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/Dashboard.js":"3","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/NavBar.js":"4","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Inactive.js":"5","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Rejections.js":"6","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Active.js":"7","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Interviews.js":"8","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Login.js":"9","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Home.js":"10","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/queries.js":"11"},{"size":247,"mtime":1645820150673,"results":"12","hashOfConfig":"13"},{"size":600,"mtime":1645820150673,"results":"14","hashOfConfig":"13"},{"size":386,"mtime":1645726751242,"results":"15","hashOfConfig":"13"},{"size":6078,"mtime":1645915925596,"results":"16","hashOfConfig":"13"},{"size":120,"mtime":1645726751242,"results":"17","hashOfConfig":"13"},{"size":1396,"mtime":1645915925598,"results":"18","hashOfConfig":"13"},{"size":2499,"mtime":1645915925598,"results":"19","hashOfConfig":"13"},{"size":1588,"mtime":1646018009157,"results":"20","hashOfConfig":"13"},{"size":2253,"mtime":1645905077223,"results":"21","hashOfConfig":"13"},{"size":6039,"mtime":1646021448054,"results":"22","hashOfConfig":"13"},{"size":624,"mtime":1646018635950,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ecb1ef",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/index.js",[],["53","54"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/App.js",["55","56"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport Dashboard from \"./components/Dashboard\";\nimport './style.css'\n\n// const App = () => <Dashboard />;\n\nconst client = new ApolloClient({\n    uri: '/graphql',\n    cache: new InMemoryCache(),\n  });\n  \n  function App() {\n    return (\n      <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Dashboard />\n           \n        </>\n      </Router>\n      </ApolloProvider>\n    );\n  }\n\nexport default App;\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/Dashboard.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/NavBar.js",["57","58","59","60","61","62","63"],"import React from \"react\";\nimport {\n    CDBSidebar,\n    CDBSidebarContent,\n    CDBSidebarFooter,\n    CDBSidebarHeader,\n    CDBSidebarMenu,\n    CDBSidebarMenuItem,\n} from 'cdbreact';\nimport { NavLink } from 'react-router-dom';\nimport Active from '../pages/Active'\nimport Rejections from '../pages/Rejections'\nimport Inactive from '../pages/Inactive'\nimport Interviews from '../pages/Interviews'\nimport Home from '../pages/Home'\nimport Login from '../pages/Login'\n\n\nfunction NavBar({ currentPage, handlePageChange }) {\n    const renderPage = () => {\n        if (currentPage === 'Home') {\n            return <Home />;\n        }\n        if (currentPage === 'Active') {\n            return <Active />;\n        }\n        if (currentPage === 'Rejections') {\n            return <Rejections />;\n        }\n        if (currentPage === 'Inactive') {\n            return <Inactive />;\n\n        } if (currentPage === 'Login') {\n            return <Login />;\n        }\n        return <Interviews />;\n\n    };\n\n    return (\n        <><div className=\"bg-dark text-secondary px-1 py-2 text-start\">\n            <div className=\"py-5\">\n                <h1 className=\"display-5 fw-bold text-white\">My Applications</h1>\n            </div>\n        </div><div className=\"row\">\n                <div className=\"col-2\">\n                    <div style={{ display: 'flex', height: '100vh', overflow: 'scroll initial' }}>\n                        <CDBSidebar textColor=\"#fff\" backgroundColor=\"#333\">\n                            <CDBSidebarHeader>\n                                <a href=\"#Home\" className=\"text-decoration-none\" style={{ color: 'inherit' }} onClick={() => handlePageChange('Home')}>\n                                    Home\n                                </a>\n                            </CDBSidebarHeader>\n                            <CDBSidebarContent className=\"sidebar-content\">\n                                <CDBSidebarMenu>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#active\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Active')}\n                                            className={currentPage === 'Active' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            All Applications\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#interviews\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Interviews')}\n                                            className={currentPage === 'Interviews' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Interviews\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#rejections\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Rejections')}\n                                            className={currentPage === 'Rejections' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Rejections\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#inactive\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Inactive')}\n                                            className={currentPage === 'Inactive' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Inactive\n                                        </a>\n                                    </li>\n\n\n\n\n\n                                </CDBSidebarMenu>\n                            </CDBSidebarContent>\n\n                            <CDBSidebarFooter style={{ textAlign: 'center' }}>\n                                <div\n                                    style={{\n                                        padding: '20px 5px',\n                                    }}\n                                >\n                                    \n                                    <a\n                                            href=\"#Logout\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Logout')}\n                                            className={currentPage === 'Logout' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Logout\n                                        </a>\n                                </div>\n                            </CDBSidebarFooter>\n                        </CDBSidebar>\n                    </div>\n                </div>\n                <div className=\"col-9\">\n                    <div id=\"content align-self-end\">\n\n                        {renderPage()}\n\n                    </div>\n\n                </div>\n\n            </div></>\n\n\n\n    );\n}\n\nexport default NavBar;\n\n\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Inactive.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Rejections.js",["64","65"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_REJECTIONS } from '../utils/queries';\n\nexport default function Rejection() {\n\n    const { loading, data } = useQuery(QUERY_REJECTIONS)\n\n      const rejections = data?.rejection || [];;\n      console.log(rejections)\n\n\n\n    return ( \n        <div>\n     {rejections ? (\n              <section>\n                <table>\n                  <thead>\n                    <tr>\n                    <th>Date Applied</th>\n                      <th>Company Name</th>\n                      <th>Position</th>\n                      <th>Location</th>\n                      <th>Date Rejected</th>\n                    </tr>\n                  </thead>\n    \n                  <tbody>\n                    {rejections.map((rej) => (\n                      <tr key={rej.id}>\n                        <td>{rej.dateApplied}</td>\n                        <td>{rej.companyName}</td>\n                        <td>{rej.position}</td>\n                        <td>{rej.location}</td>\n                        <td>{rej.dateRejected}</td>\n    \n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </section>\n\n          ) : (\n            <span>Hmm... seems that there are no applications here!</span>\n          )}\n          </div> \n\n\n    );\n}","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Active.js",["66","67","68","69","70","71","72","73"],"import { React, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_APPLICATIONS } from '../utils/queries';\nimport Modal from \"react-bootstrap/Modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nconst check = <FontAwesomeIcon icon={faCheck} size=\"1x\" fixedWidth className=\"check\"/>\nconst reject = <FontAwesomeIcon icon={faXmark} size=\"1x\" fixedWidth className=\"reject\"/>\n\n\nexport default function Home() {\n  const { loading, data } = useQuery(QUERY_APPLICATIONS);\n  const applications = data?.applications || [];\n  console.log(applications)\n\n\n  const [isOpen, setIsOpen] = useState(false);\n  const showModal = (e) => {\n    setIsOpen({ show: true })\n  };\n  const hideModal = () => {\n    setIsOpen(false)\n  };\n\n\n  return (\n    <div>\n      {applications ? (\n        <>\n          <section>\n            <table>\n              <thead>\n                <tr>\n                <th>Date Applied</th>\n                  <th>Company Name</th>\n                  <th>Position</th>\n                  <th>Location</th>\n                  <th>Update</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {applications.map((application) => (\n                  <tr key={application.id}>\n                    <td>{application.dateApplied}</td>\n                    <td>{application.companyName}</td>\n                    <td>{application.position}</td>\n                    <td>{application.location}</td>\n\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"yayInterview\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <a className=\"check\">{check}</a>\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"booReject\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <a className=\"reject\">{reject}</a>\n                      </button>\n\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </section>\n        </>\n      ) : (\n        <span>Hmm... seems that there are no applications here!</span>\n      )}\n\n      \n    </div>\n  );\n}","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Interviews.js",["74","75"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_INTERVIEWS } from '../utils/queries';\n\nexport default function Interviews() {\n    // const { interview } = useParams();\n    const { loading, data } = useQuery(QUERY_INTERVIEWS)\n\n      const interviews = data?.interview || [];;\n      console.log(interviews)\n\n    const color = \"lightseagreen\"\n    // if (interviews.interview == false) {\n    //     return color = 'lightseagreen'\n    // } \n\n    return ( \n        <div>\n     {interviews ? (\n              <section>\n                <table>\n                  <thead>\n                    <tr>\n                    <th>Date Applied</th>\n                      <th>Company Name</th>\n                      <th>Position</th>\n                      <th>Location</th>\n                      <th>Interview Date</th>\n                    </tr>\n                  </thead>\n    \n                  <tbody>\n                    {interviews.map((int) => (\n                      <tr key={int.id} style={{ color }}>\n                        <td>{int.dateApplied}</td>\n                        <td >{int.companyName}</td>\n                        <td>{int.position}</td>\n                        <td>{int.location}</td>\n                        <td>{int.interviewDate}</td>\n    \n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </section>\n\n          ) : (\n            <span>Hmm... seems that there are no applications here!</span>\n          )}\n          </div> \n\n\n    );\n}","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Login.js",["76"],"import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { useMutation } from '@apollo/client';\n// import { LOGIN_USER } from '../utils/mutations';\n\n// import Auth from '../utils/auth';\n\n// const Login = (props) => {\n//   const [formState, setFormState] = useState({ email: '', password: '' });\n//   const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  \n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n\n//     setFormState({\n//       ...formState,\n//       [name]: value,\n//     });\n//   };\n\n  \n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n//     console.log(formState);\n//     try {\n//       const { data } = await login({\n//         variables: { ...formState },\n//       });\n\n//       Auth.login(data.login.token);\n//     } catch (e) {\n//       console.error(e);\n//     }\n\n    \n//     setFormState({\n//       email: '',\n//       password: '',\n//     });\n//   };\nexport default function Login() {\n    \n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n             \n                <form>\n              {/* <form onSubmit={handleFormSubmit}> */}\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                //   value={formState.email}\n                //   onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                //   value={formState.password}\n                //   onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            \n\n            \n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Home.js",["77","78","79","80"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/queries.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":35,"nodeType":"87","messageId":"88","endLine":2,"endColumn":41},{"ruleId":"85","severity":1,"message":"89","line":2,"column":43,"nodeType":"87","messageId":"88","endLine":2,"endColumn":48},{"ruleId":"85","severity":1,"message":"90","line":8,"column":5,"nodeType":"87","messageId":"88","endLine":8,"endColumn":23},{"ruleId":"85","severity":1,"message":"91","line":10,"column":10,"nodeType":"87","messageId":"88","endLine":10,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":61,"column":45,"nodeType":"94","messageId":"95","endLine":61,"endColumn":166},{"ruleId":"92","severity":1,"message":"93","line":70,"column":45,"nodeType":"94","messageId":"95","endLine":70,"endColumn":170},{"ruleId":"92","severity":1,"message":"93","line":79,"column":45,"nodeType":"94","messageId":"95","endLine":79,"endColumn":170},{"ruleId":"92","severity":1,"message":"93","line":88,"column":45,"nodeType":"94","messageId":"95","endLine":88,"endColumn":168},{"ruleId":"92","severity":1,"message":"93","line":111,"column":45,"nodeType":"94","messageId":"95","endLine":111,"endColumn":166},{"ruleId":"85","severity":1,"message":"96","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":19},{"ruleId":"85","severity":1,"message":"97","line":8,"column":13,"nodeType":"87","messageId":"88","endLine":8,"endColumn":20},{"ruleId":"85","severity":1,"message":"98","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"99","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":13},{"ruleId":"85","severity":1,"message":"97","line":13,"column":11,"nodeType":"87","messageId":"88","endLine":13,"endColumn":18},{"ruleId":"85","severity":1,"message":"100","line":18,"column":10,"nodeType":"87","messageId":"88","endLine":18,"endColumn":16},{"ruleId":"85","severity":1,"message":"101","line":19,"column":9,"nodeType":"87","messageId":"88","endLine":19,"endColumn":18},{"ruleId":"85","severity":1,"message":"102","line":22,"column":9,"nodeType":"87","messageId":"88","endLine":22,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":57,"column":25,"nodeType":"105","endLine":57,"endColumn":46},{"ruleId":"103","severity":1,"message":"104","line":64,"column":25,"nodeType":"105","endLine":64,"endColumn":47},{"ruleId":"85","severity":1,"message":"96","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":19},{"ruleId":"85","severity":1,"message":"97","line":8,"column":13,"nodeType":"87","messageId":"88","endLine":8,"endColumn":20},{"ruleId":"85","severity":1,"message":"106","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"98","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"97","line":14,"column":11,"nodeType":"87","messageId":"88","endLine":14,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":86,"column":25,"nodeType":"105","endLine":86,"endColumn":46},{"ruleId":"103","severity":1,"message":"104","line":93,"column":25,"nodeType":"105","endLine":93,"endColumn":47},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'CDBSidebarMenuItem' is defined but never used.","'NavLink' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useParams' is defined but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'Modal' is defined but never used.","'isOpen' is assigned a value but never used.","'showModal' is assigned a value but never used.","'hideModal' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]