[{"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/index.js":"1","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/App.js":"2","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/Dashboard.js":"3","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Application.js":"4","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Active.js":"5","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/NavBar.js":"6","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Rejections.js":"7","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Interviews.js":"8","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Inactive.js":"9","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Login.js":"10","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Signup.js":"11","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Home.js":"12","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/queries.js":"13","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/mutations.js":"14","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/Auth.js":"15"},{"size":249,"mtime":1646083466974,"results":"16","hashOfConfig":"17"},{"size":311,"mtime":1646183545913,"results":"18","hashOfConfig":"17"},{"size":1693,"mtime":1646192874901,"results":"19","hashOfConfig":"17"},{"size":2997,"mtime":1646195191626,"results":"20","hashOfConfig":"17"},{"size":13611,"mtime":1646196052065,"results":"21","hashOfConfig":"17"},{"size":4639,"mtime":1646192874901,"results":"22","hashOfConfig":"17"},{"size":1505,"mtime":1646195508400,"results":"23","hashOfConfig":"17"},{"size":4672,"mtime":1646195411047,"results":"24","hashOfConfig":"17"},{"size":120,"mtime":1645726751242,"results":"25","hashOfConfig":"17"},{"size":2985,"mtime":1646192874902,"results":"26","hashOfConfig":"17"},{"size":3271,"mtime":1646183545915,"results":"27","hashOfConfig":"17"},{"size":1465,"mtime":1646192874902,"results":"28","hashOfConfig":"17"},{"size":1232,"mtime":1646183545916,"results":"29","hashOfConfig":"17"},{"size":2246,"mtime":1646192874903,"results":"30","hashOfConfig":"17"},{"size":1042,"mtime":1645820159284,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ecb1ef",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/index.js",[],["70","71"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/App.js",["72"],"import React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Dashboard from \"./components/Dashboard\";\nimport './style.css'\n\n\n\n  \n  function App() {\n    return (\n\n      <Router>\n        \n          <Dashboard />\n           \n      </Router>\n\n    );\n  }\n\nexport default App;\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/Dashboard.js",["73"],"import React, { useState } from 'react';\nimport NavBar from './NavBar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport Application from \"../pages/Application\";\nimport Active from '../pages/Active'\nimport Rejections from '../pages/Rejections'\nimport Inactive from '../pages/Inactive'\nimport Interviews from '../pages/Interviews'\nimport Home from '../pages/Home'\nimport Login from '../pages/Login'\nimport Signup from '../pages/Signup'\n\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n});\n\n\nfunction Dashboard() {\n    const [currentPage, setCurrentPage] = useState('Login');\n \n  \n    const handlePageChange = (page) => setCurrentPage(page);\n  \n    return (\n \n      <ApolloProvider client={client}>\n            <NavBar currentPage={currentPage} handlePageChange={handlePageChange} >\n          <Router>\n\n        <Switch>\n          <div>\n        <Route exact path=\"/active\">\n              <Active />\n        </Route>\n        <Route exact path=\"/interviews\">\n              <Interviews />\n        </Route>\n        <Route exact path=\"/rejections\">\n              <Rejections />\n        </Route>\n        <Route exact path=\"/application/:applicationId\">\n              <Application />\n      </Route>\n      <Route exact path=\"/\">\n              <Home />\n        </Route>\n        <Route exact path=\"/Login\">\n              <Login />\n        </Route>\n        <Route exact path=\"/Signup\">\n              <Signup />\n        </Route>\n\n\n      \n      </div>\n      </Switch>\n      </Router>\n      </NavBar>\n      </ApolloProvider>\n\n    );\n  }\n\nexport default Dashboard;","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Application.js",["74"],"import Modal from \"react-bootstrap/Modal\";\nimport { React, useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_SINGLE_APPLICATION } from '../utils/queries';\n\nconst Application = () => {\n    const { applicationId } = useParams();\n  \n    const { loading, data } = useQuery(QUERY_SINGLE_APPLICATION, {\n      variables: { applicationId: applicationId },\n    });\n  \n    const applications = data?.application || {};\n    console.log(applications)\n    // console.log(applications.notes[0].noteText)\n    // console.log(applications.notes)\n    const allNotes = applications.notes\n    // console.log(allNotes[1].noteText)\n  \n    const [isOpen, setIsOpen] = useState(false);\n    const showModal = (e) => {\n      setIsOpen({ show: true })\n    };\n    const hideModal = () => {\n      setIsOpen(false)\n    };\n\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n    return (\n        <div className=\"card custom-card-sing-app \">\n        <h4 className=\"card-header text-center custom-header\">\n          {applications.companyName}\n        </h4>\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-center\">{applications.position}</h5>\n          <p className=\"card-text\"><strong>Job Description:</strong> {applications.description} </p>\n          <p className=\"card-text\"><strong>Date Applied:</strong> {applications.dateApplied} </p>\n          <p className=\"card-text\"><strong>Location:</strong> {applications.location} </p>\n          <p className=\"card-text\"><strong>Notes:</strong> </p>\n              <div className =\"card note-card\">\n                {allNotes.map((note) => (\n                          <p className=\"card-text\">{note.noteText} </p>\n\n\n                ))}</div>\n                <div className=\"noteBtn\">\n      <button\n        type=\"button\"\n        onClick={showModal}\n       className=\"notesBtn\" \n      >\n        <span role=\"img\" aria-label=\"close\">\n          Add Note\n        </span>\n      </button>\n</div>\n      <Modal\n        show={isOpen}\n        onHide={hideModal}\n        size='lg'\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={hideModal} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-2\">\n    <div className=\"container\">\n        <div className=\"row \">\n            <div className=\"col\">\n\n            </div>\n                <form className=\"mt-4 new-app\">\n\n\n<div className=\"form-group\">\n\n    <textarea type=\"input\" className=\"form-control\" id=\"notes\" name=\"notes\" aria-describedby=\"notes\"\n        rows=\"5\" placeholder=\"\"></textarea>\n        </div>\n\n\n    <br/>\n\n\n\n\n\n\n<div className=\"noteBtn\">\n    <button type=\"submit\" className=\"notesBtn2\">Add Note</button>\n</div>\n</form>\n</div>\n</div>\n</div>\n\n\n      </Modal>\n\n\n\n        </div>\n\n      </div>\n\n\n    );\n  };\n  \n  export default Application;\n  ","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Active.js",["75","76","77","78","79","80","81","82","83"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/NavBar.js",["84","85","86","87"],"import React from \"react\";\nimport {\n    CDBSidebar,\n    CDBSidebarContent,\n    CDBSidebarFooter,\n    CDBSidebarHeader,\n    CDBSidebarMenu,\n} from 'cdbreact';\n\n\nfunction NavBar(props)  {\n\n    return (\n        <><div className=\"bg-dark text-secondary px-1 py-2 text-start\">\n            <div className=\"py-5\">\n                <h1 className=\"display-5 fw-bold text-white\">My Applications</h1>\n            </div>\n        </div><div className=\"row\">\n                <div className=\"col-2\">\n                    <div style={{ display: 'flex', height: '100vh', overflow: 'scroll initial' }}>\n                        <CDBSidebar textColor=\"#fff\" backgroundColor=\"#333\">\n                            <CDBSidebarHeader>\n                                <a href=\"/\" className=\"text-decoration-none\" style={{ color: 'inherit' }} onClick={() => props.handlePageChange('Home')}>\n                                    Home\n                                </a>\n                            </CDBSidebarHeader>\n                            <CDBSidebarContent className=\"sidebar-content\">\n                                <CDBSidebarMenu>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"/active\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => props.handlePageChange('Active')}\n                                            className={props.currentPage === 'Active' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            All Applications\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"/interviews\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => props.handlePageChange('Interviews')}\n                                            className={props.currentPage === 'Interviews' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Interviews\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"/rejections\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => props.handlePageChange('Rejections')}\n                                            className={props.currentPage === 'Rejections' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Rejections\n                                        </a>\n                                    </li>\n\n\n\n\n\n\n                                </CDBSidebarMenu>\n                            </CDBSidebarContent>\n\n                            <CDBSidebarFooter style={{ textAlign: 'center' }}>\n                                <div\n                                    style={{\n                                        padding: '20px 5px',\n                                    }}\n                                >\n                                    \n                                    <a\n                                            href=\"/Login\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => props.handlePageChange('Login')}\n                                            className={props.currentPage === 'Login' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Logout\n                                        </a>\n                                </div>\n                            </CDBSidebarFooter>\n                        </CDBSidebar>\n                    </div>\n                </div>\n                <div className=\"col-9\">\n                    <div id=\"content align-self-end\">\n\n                        {props.children}\n\n                    </div>\n\n                </div>\n\n            </div></>\n\n\n\n    );\n}\n\nexport default NavBar;\n\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Rejections.js",["88","89"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_REJECTIONS } from '../utils/queries';\n\nexport default function Rejection() {\n\n    const { loading, data } = useQuery(QUERY_REJECTIONS)\n\n      const rejections = data?.rejection || [];;\n      console.log(rejections)\n\n\n\n    return ( \n        <div>\n                        <h1 className=\"text-center\">Rejected Applications</h1>\n                        <br/>\n     {rejections ? (\n              <section>\n                <table>\n                  <thead>\n                    <tr>\n                    <th>Date Applied</th>\n                      <th>Company Name</th>\n                      <th>Position</th>\n                      <th>Location</th>\n                      <th>Date Rejected</th>\n                    </tr>\n                  </thead>\n    \n                  <tbody>\n                    {rejections.map((rej) => (\n                      <tr key={rej.id}>\n                        <td>{rej.dateApplied}</td>\n                        <td>{rej.companyName}</td>\n                        <td>{rej.position}</td>\n                        <td>{rej.location}</td>\n                        <td>{rej.dateRejected}</td>\n    \n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </section>\n\n          ) : (\n            <span>Hmm... seems that there are no applications here!</span>\n          )}\n          </div> \n\n\n    );\n}","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Interviews.js",["90","91","92","93"],"import Modal from \"react-bootstrap/Modal\";\nimport { React, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_INTERVIEWS } from '../utils/queries';\n\nexport default function Interviews() {\n    // const { interview } = useParams();\n    const { loading, data } = useQuery(QUERY_INTERVIEWS)\n\n    const interviews = data?.interview || [];;\n    console.log(interviews)\n    const allNotes = interviews.notes\n\n    const [isOpen, setIsOpen] = useState(false);\n    const showModal = (e) => {\n        setIsOpen({ show: true })\n    };\n    const hideModal = () => {\n        setIsOpen(false)\n    };\n    return (\n        <div>\n            <h1 className=\"text-center\">My Interviews</h1>\n            {interviews ? ( \n                <div>\n            {interviews.map((interview) => (\n                <div className=\"card custom-card-sing-app\">\n                    <h4 className=\"card-header text-center custom-header1\">\n                        {interview.companyName}\n                    </h4>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title text-center\"><strong>{interview.position}</strong></h5>\n                        <h6 className=\"card-title text-center\" style={{ color: 'red' }}>Interview Date: {interview.interviewDate}</h6>\n                        <h6 className=\"card-title text-center\" style={{ color: 'red' }}>Interview Time: {interview.interviewTime}</h6>\n                        <h6 className=\"card-title text-center\" style={{ color: 'red' }}>Interview Location: {interview.interviewLocation}</h6>\n                        <br/>\n                        <p className=\"card-text\"><strong>Job Description:</strong> {interview.description} </p>\n                        <p className=\"card-text\"><strong>Date Applied:</strong> {interview.dateApplied} </p>\n                        <p className=\"card-text\"><strong>Job Location:</strong> {interview.location} </p>\n                        <p className=\"card-text\"><strong>Notes:</strong> </p>\n                        <div className=\"card note-card\">\n                            {interview.notes.map((note) => (\n                                <p className=\"card-text\">{note.noteText} </p>\n\n\n                            ))}</div>\n                        <div className=\"noteBtn\">\n                            <button\n                                type=\"button\"\n                                onClick={showModal}\n                                className=\"notesBtn\"\n                            >\n                                <span role=\"img\" aria-label=\"close\">\n                                    Add Note\n                                </span>\n                            </button>\n                        </div>\n                        <Modal\n                            show={isOpen}\n                            onHide={hideModal}\n                            size='lg'\n                            aria-labelledby=\"contained-modal-title-vcenter\"\n                            centered\n                        >\n                            <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={hideModal} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-2\">\n                                <div className=\"container\">\n                                    <div className=\"row \">\n                                        <div className=\"col\">\n\n                                        </div>\n                                        <form className=\"mt-4 new-app\">\n\n\n                                            <div className=\"form-group\">\n\n                                                <textarea type=\"input\" className=\"form-control\" id=\"notes\" name=\"notes\" aria-describedby=\"notes\"\n                                                    rows=\"5\" placeholder=\"\"></textarea>\n                                            </div>\n\n\n                                            <br />\n\n\n\n\n\n\n                                            <div className=\"noteBtn\">\n                                                <button type=\"submit\" className=\"notesBtn2\">Add Note</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                        </Modal>\n\n                    </div>\n                </div>\n\n            ))}\n            </div>\n            ) : (\n<span>Hmm... seems there are no applications here!</span>\n            )}\n        </div>\n\n\n    );\n};\n\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Inactive.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Login.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Signup.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Home.js",["94","95","96","97","98","99","100","101","102","103","104","105","106"],"import { React, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\nimport { QUERY_APPLICATIONS } from '../utils/queries';\nimport { EDIT_INTERVIEW, ADD_APPLICATION, EDIT_REJECTION } from '../utils/mutations';\nimport Modal from \"react-bootstrap/Modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { faAnglesRight} from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\n\n\nconst check = <FontAwesomeIcon icon={faCheck} size=\"1x\" fixedWidth className=\"check\"/>\nconst reject = <FontAwesomeIcon icon={faXmark} size=\"1x\" fixedWidth className=\"reject\"/>\nconst angles = <FontAwesomeIcon icon={faAnglesRight} size=\"1x\" fixedWidth className=\"moreInfo\"/>\n\n\nexport default function Home() {\n  \n\n  return (\n    <div className=\"text-center\">\n      <br/><br/>\n      <h1>Inspirational Quotes</h1>\n      <br/>\n      <br/>\n      <h3 style={{color: 'seagreen'}}>The results you achieve will be in direct proportion to the effort you apply</h3>\n      <br/>\n      <h3 style={{color: 'blue'}}>You have to be odd to be number 1</h3>\n      <br/>\n      <h3 style={{color: 'purple'}}>Just say yikes and move on</h3>\n      <br/>\n      <h3 style={{color: 'magenta'}}>If cauliflower can become pizza, you can become anything</h3>\n    </div>\n  );\n}","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/queries.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/mutations.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/Auth.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":2,"column":35,"nodeType":"113","messageId":"114","endLine":2,"endColumn":40},{"ruleId":"111","severity":1,"message":"115","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":16},{"ruleId":"111","severity":1,"message":"116","line":2,"column":27,"nodeType":"113","messageId":"114","endLine":2,"endColumn":36},{"ruleId":"111","severity":1,"message":"116","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"117","line":20,"column":11,"nodeType":"113","messageId":"114","endLine":20,"endColumn":18},{"ruleId":"111","severity":1,"message":"118","line":58,"column":26,"nodeType":"113","messageId":"114","endLine":58,"endColumn":31},{"ruleId":"111","severity":1,"message":"119","line":103,"column":24,"nodeType":"113","messageId":"114","endLine":103,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":225,"column":25,"nodeType":"122","endLine":225,"endColumn":46},{"ruleId":"120","severity":1,"message":"121","line":234,"column":25,"nodeType":"122","endLine":234,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":242,"column":25,"nodeType":"122","endLine":242,"endColumn":49},{"ruleId":"123","severity":1,"message":"124","line":338,"column":118,"nodeType":"125","messageId":"126","endLine":338,"endColumn":119},{"ruleId":"123","severity":1,"message":"124","line":395,"column":118,"nodeType":"125","messageId":"126","endLine":395,"endColumn":119},{"ruleId":"127","severity":1,"message":"128","line":34,"column":45,"nodeType":"129","messageId":"130","endLine":34,"endColumn":172},{"ruleId":"127","severity":1,"message":"128","line":43,"column":45,"nodeType":"129","messageId":"130","endLine":43,"endColumn":176},{"ruleId":"127","severity":1,"message":"128","line":52,"column":45,"nodeType":"129","messageId":"130","endLine":52,"endColumn":176},{"ruleId":"127","severity":1,"message":"128","line":76,"column":45,"nodeType":"129","messageId":"130","endLine":76,"endColumn":171},{"ruleId":"111","severity":1,"message":"131","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":19},{"ruleId":"111","severity":1,"message":"117","line":8,"column":13,"nodeType":"113","messageId":"114","endLine":8,"endColumn":20},{"ruleId":"111","severity":1,"message":"116","line":2,"column":27,"nodeType":"113","messageId":"114","endLine":2,"endColumn":36},{"ruleId":"111","severity":1,"message":"131","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":19},{"ruleId":"111","severity":1,"message":"117","line":9,"column":13,"nodeType":"113","messageId":"114","endLine":9,"endColumn":20},{"ruleId":"111","severity":1,"message":"132","line":13,"column":11,"nodeType":"113","messageId":"114","endLine":13,"endColumn":19},{"ruleId":"111","severity":1,"message":"133","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"116","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"134","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":18},{"ruleId":"111","severity":1,"message":"135","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":21},{"ruleId":"111","severity":1,"message":"136","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":28},{"ruleId":"111","severity":1,"message":"137","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":24},{"ruleId":"111","severity":1,"message":"138","line":5,"column":26,"nodeType":"113","messageId":"114","endLine":5,"endColumn":41},{"ruleId":"111","severity":1,"message":"139","line":5,"column":43,"nodeType":"113","messageId":"114","endLine":5,"endColumn":57},{"ruleId":"111","severity":1,"message":"140","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":13},{"ruleId":"111","severity":1,"message":"141","line":11,"column":10,"nodeType":"113","messageId":"114","endLine":11,"endColumn":14},{"ruleId":"111","severity":1,"message":"142","line":14,"column":7,"nodeType":"113","messageId":"114","endLine":14,"endColumn":12},{"ruleId":"111","severity":1,"message":"143","line":15,"column":7,"nodeType":"113","messageId":"114","endLine":15,"endColumn":13},{"ruleId":"111","severity":1,"message":"144","line":16,"column":7,"nodeType":"113","messageId":"114","endLine":16,"endColumn":13},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Inactive' is defined but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'error2' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useParams' is defined but never used.","'allNotes' is assigned a value but never used.","'useState' is defined but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'QUERY_APPLICATIONS' is defined but never used.","'EDIT_INTERVIEW' is defined but never used.","'ADD_APPLICATION' is defined but never used.","'EDIT_REJECTION' is defined but never used.","'Modal' is defined but never used.","'Link' is defined but never used.","'check' is assigned a value but never used.","'reject' is assigned a value but never used.","'angles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]