[{"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/index.js":"1","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/App.js":"2","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/Dashboard.js":"3","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/NavBar.js":"4","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Active.js":"5","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Interviews.js":"6","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Inactive.js":"7","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Rejections.js":"8","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Home.js":"9","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Signup.js":"10","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Login.js":"11","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/queries.js":"12"},{"size":247,"mtime":1645820150673,"results":"13","hashOfConfig":"14"},{"size":600,"mtime":1645820150673,"results":"15","hashOfConfig":"14"},{"size":386,"mtime":1645726751242,"results":"16","hashOfConfig":"14"},{"size":6084,"mtime":1645825360728,"results":"17","hashOfConfig":"14"},{"size":116,"mtime":1645726751242,"results":"18","hashOfConfig":"14"},{"size":1379,"mtime":1645904742459,"results":"19","hashOfConfig":"14"},{"size":120,"mtime":1645726751242,"results":"20","hashOfConfig":"14"},{"size":1338,"mtime":1645904846804,"results":"21","hashOfConfig":"14"},{"size":5667,"mtime":1645904222710,"results":"22","hashOfConfig":"14"},{"size":1698,"mtime":1645823264104,"results":"23","hashOfConfig":"14"},{"size":2253,"mtime":1645823563708,"results":"24","hashOfConfig":"14"},{"size":375,"mtime":1645903270208,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ecb1ef",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/index.js",[],["56","57"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/App.js",["58","59"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport Dashboard from \"./components/Dashboard\";\nimport './style.css'\n\n// const App = () => <Dashboard />;\n\nconst client = new ApolloClient({\n    uri: '/graphql',\n    cache: new InMemoryCache(),\n  });\n  \n  function App() {\n    return (\n      <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Dashboard />\n           \n        </>\n      </Router>\n      </ApolloProvider>\n    );\n  }\n\nexport default App;\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/Dashboard.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/NavBar.js",["60","61","62","63","64","65","66"],"import React from \"react\";\nimport {\n    CDBSidebar,\n    CDBSidebarContent,\n    CDBSidebarFooter,\n    CDBSidebarHeader,\n    CDBSidebarMenu,\n    CDBSidebarMenuItem,\n} from 'cdbreact';\nimport { NavLink } from 'react-router-dom';\nimport Active from '../pages/Active'\nimport Rejections from '../pages/Rejections'\nimport Inactive from '../pages/Inactive'\nimport Interviews from '../pages/Interviews'\nimport Home from '../pages/Home'\nimport Login from '../pages/Login'\n\n\nfunction NavBar({ currentPage, handlePageChange }) {\n    const renderPage = () => {\n        if (currentPage === 'Home') {\n            return <Home />;\n        }\n        if (currentPage === 'Active') {\n            return <Active />;\n        }\n        if (currentPage === 'Rejections') {\n            return <Rejections />;\n        }\n        if (currentPage === 'Inactive') {\n            return <Inactive />;\n\n        } if (currentPage === 'Login') {\n            return <Login />;\n        }\n        return <Interviews />;\n\n    };\n\n    return (\n        <><div className=\"bg-dark text-secondary px-1 py-2 text-start\">\n            <div className=\"py-5\">\n                <h1 className=\"display-5 fw-bold text-white\">My Applications</h1>\n            </div>\n        </div><div className=\"row\">\n                <div className=\"col-2\">\n                    <div style={{ display: 'flex', height: '100vh', overflow: 'scroll initial' }}>\n                        <CDBSidebar textColor=\"#fff\" backgroundColor=\"#333\">\n                            <CDBSidebarHeader>\n                                <a href=\"#Home\" className=\"text-decoration-none\" style={{ color: 'inherit' }} onClick={() => handlePageChange('Home')}>\n                                    Home\n                                </a>\n                            </CDBSidebarHeader>\n                            <CDBSidebarContent className=\"sidebar-content\">\n                                <CDBSidebarMenu>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#active\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Active')}\n                                            className={currentPage === 'Active' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            All Active Applications\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#rejections\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Rejections')}\n                                            className={currentPage === 'Rejections' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Rejections\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#inactive\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Inactive')}\n                                            className={currentPage === 'Inactive' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Inactive\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#interviews\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Interviews')}\n                                            className={currentPage === 'Interviews' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Interviews\n                                        </a>\n                                    </li>\n\n\n\n\n                                </CDBSidebarMenu>\n                            </CDBSidebarContent>\n\n                            <CDBSidebarFooter style={{ textAlign: 'center' }}>\n                                <div\n                                    style={{\n                                        padding: '20px 5px',\n                                    }}\n                                >\n                                    \n                                    <a\n                                            href=\"#Logout\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => handlePageChange('Logout')}\n                                            className={currentPage === 'Logout' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Logout\n                                        </a>\n                                </div>\n                            </CDBSidebarFooter>\n                        </CDBSidebar>\n                    </div>\n                </div>\n                <div className=\"col-9\">\n                    <div id=\"content align-self-end\">\n\n                        {renderPage()}\n\n                    </div>\n\n                </div>\n\n            </div></>\n\n\n\n    );\n}\n\nexport default NavBar;\n\n\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Active.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Interviews.js",["67","68"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Inactive.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Rejections.js",["69","70"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Home.js",["71","72","73","74"],"import { React, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_APPLICATIONS } from '../utils/queries';\nimport Modal from \"react-bootstrap/Modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nconst check = <FontAwesomeIcon icon={faCheck} size=\"1x\" fixedWidth className=\"check\"/>\nconst reject = <FontAwesomeIcon icon={faXmark} size=\"1x\" fixedWidth className=\"reject\"/>\n\n\nexport default function Home() {\n  const { loading, data } = useQuery(QUERY_APPLICATIONS);\n  const applications = data?.applications || [];\n  console.log(applications)\n\n\n  const [isOpen, setIsOpen] = useState(false);\n  const showModal = (e) => {\n    setIsOpen({ show: true })\n  };\n  const hideModal = () => {\n    setIsOpen(false)\n  };\n\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={showModal}\n      >\n        <span role=\"img\" aria-label=\"close\">\n          Add new application\n        </span>\n      </button>\n\n\n      {applications ? (\n        <>\n          <section>\n            <table>\n              <thead>\n                <tr>\n                <th>Date Applied</th>\n                  <th>Company Name</th>\n                  <th>Position</th>\n                  <th>Location</th>\n                  <th>Update</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {applications.map((application) => (\n                  <tr key={application.id}>\n                    <td>{application.dateApplied}</td>\n                    <td>{application.companyName}</td>\n                    <td>{application.position}</td>\n                    <td>{application.location}</td>\n\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"yayInterview\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <a className=\"check\">{check}</a>\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"booReject\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <a className=\"reject\">{reject}</a>\n                      </button>\n\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </section>\n        </>\n      ) : (\n        <span>Hmm... seems that there are no applications here!</span>\n      )}\n\n      <Modal\n        show={isOpen}\n        onHide={hideModal}\n        size='lg'\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={hideModal} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-1\">\n    <div className=\"container\">\n        <div className=\"row \">\n            <div className=\"col\">\n\n            </div>\n                <form className=\"mt-4 new-app\">\n\n<div className=\"form-group\">\n    <label for=\"companyName\"><strong>Company Name*</strong></label>\n    <input type=\"input\" className=\"form-control companyName\" id=\"companyName\" name=\"companyName\"\n        aria-describedby=\"companyName\" placeholder=\"Company Name\"/>\n\n</div>\n\n<br/>\n<div className=\"form-group\">\n    <label for=\"age\"><strong>Position Title*</strong> </label>\n    <input type=\"input\" className=\"form-control\" id=\"position\" name=\"position\"\n        aria-describedby=\"position\" placeholder=\"Position Title\"/>\n\n</div>\n\n<br/>\n<div className=\"form-group\">\n    <label for=\"date\"><strong>Date Applied*</strong> </label>\n    <input type=\"input\" className=\"form-control\" id=\"date\" name=\"date\" aria-describedby=\"date\"\n        placeholder=\"ie 02/05/2021\"/>\n\n</div>\n<br/>\n<div className=\"form-group\">\n    <label for=\"location\"><strong>Location</strong></label>\n    <input type=\"input\" className=\"form-control\" id=\"location\" name=\"location\"\n        aria-describedby=\"location\" placeholder=\"City, State or Remote\"/>\n\n</div>\n<br/>\n<div className=\"form-group\">\n    <label for=\"description\"><strong>Job Description</strong></label>\n    <textarea type=\"input\" className=\"form-control\" id=\"description\" name=\"description\"\n        aria-describedby=\"description\" row=\"3\" placeholder=\"\"></textarea>\n\n</div>\n<br/>\n<div className=\"form-group\">\n    <label for=\"notes\"><strong>Additional Notes</strong></label>\n    <textarea type=\"input\" className=\"form-control\" id=\"notes\" name=\"notes\" aria-describedby=\"notes\"\n        row=\"3\" placeholder=\"\"></textarea>\n        </div>\n\n\n    {/* <div className=\"hidden\">\n        <div className=\"form-check\">\n            <input type=\"radio\" className=\"form-check-input\" value={false} name=\"rej\" checked/> rejection\n        </div>\n        <div className=\"form-check\">\n            <input type=\"radio\" className=\"form-check-input\" value={false} name=\"inter\" checked/>\n            Interview\n\n        </div>\n        <div className=\"form-check\">\n            <input type=\"radio\" className=\"form-check-input\" value=\"null\" name=\"dateRej\" checked/> Date\n            rejected\n\n        </div>\n        <div className=\"form-check\">\n            <input type=\"radio\" className=\"form-check-input\" value=\"null\" name=\"intDate\" checked/>\n            Interview date\n\n        </div>\n    </div> */}\n    <br/>\n\n\n    <button type=\"submit\" className=\"btn spec-btn\">Add application</button>\n    <p>* indicates required field </p>\n</form>\n</div>\n</div>\n</div>\n\n\n      </Modal>\n    </div>\n  );\n}","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Signup.js",[],["75","76"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Login.js",["77"],"import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { useMutation } from '@apollo/client';\n// import { LOGIN_USER } from '../utils/mutations';\n\n// import Auth from '../utils/auth';\n\n// const Login = (props) => {\n//   const [formState, setFormState] = useState({ email: '', password: '' });\n//   const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  \n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n\n//     setFormState({\n//       ...formState,\n//       [name]: value,\n//     });\n//   };\n\n  \n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n//     console.log(formState);\n//     try {\n//       const { data } = await login({\n//         variables: { ...formState },\n//       });\n\n//       Auth.login(data.login.token);\n//     } catch (e) {\n//       console.error(e);\n//     }\n\n    \n//     setFormState({\n//       email: '',\n//       password: '',\n//     });\n//   };\nexport default function Login() {\n    \n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n             \n                <form>\n              {/* <form onSubmit={handleFormSubmit}> */}\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                //   value={formState.email}\n                //   onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                //   value={formState.password}\n                //   onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            \n\n            \n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/queries.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":35,"nodeType":"84","messageId":"85","endLine":2,"endColumn":41},{"ruleId":"82","severity":1,"message":"86","line":2,"column":43,"nodeType":"84","messageId":"85","endLine":2,"endColumn":48},{"ruleId":"82","severity":1,"message":"87","line":8,"column":5,"nodeType":"84","messageId":"85","endLine":8,"endColumn":23},{"ruleId":"82","severity":1,"message":"88","line":10,"column":10,"nodeType":"84","messageId":"85","endLine":10,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":61,"column":45,"nodeType":"91","messageId":"92","endLine":61,"endColumn":166},{"ruleId":"89","severity":1,"message":"90","line":70,"column":45,"nodeType":"91","messageId":"92","endLine":70,"endColumn":170},{"ruleId":"89","severity":1,"message":"90","line":79,"column":45,"nodeType":"91","messageId":"92","endLine":79,"endColumn":168},{"ruleId":"89","severity":1,"message":"90","line":88,"column":45,"nodeType":"91","messageId":"92","endLine":88,"endColumn":170},{"ruleId":"89","severity":1,"message":"90","line":110,"column":45,"nodeType":"91","messageId":"92","endLine":110,"endColumn":166},{"ruleId":"82","severity":1,"message":"93","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"94","line":8,"column":13,"nodeType":"84","messageId":"85","endLine":8,"endColumn":20},{"ruleId":"82","severity":1,"message":"93","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"94","line":8,"column":13,"nodeType":"84","messageId":"85","endLine":8,"endColumn":20},{"ruleId":"82","severity":1,"message":"95","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"94","line":13,"column":11,"nodeType":"84","messageId":"85","endLine":13,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":67,"column":25,"nodeType":"98","endLine":67,"endColumn":46},{"ruleId":"96","severity":1,"message":"97","line":74,"column":25,"nodeType":"98","endLine":74,"endColumn":47},{"ruleId":"78","replacedBy":"99"},{"ruleId":"80","replacedBy":"100"},{"ruleId":"82","severity":1,"message":"101","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'CDBSidebarMenuItem' is defined but never used.","'NavLink' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useParams' is defined but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["102"],["103"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]