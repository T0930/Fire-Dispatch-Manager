[{"C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\index.js":"1","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\App.js":"2","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\components\\Dashboard.js":"3","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\components\\NavBar.js":"4","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Active.js":"5","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Rejections.js":"6","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Interviews.js":"7","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Inactive.js":"8","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Home.js":"9","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Login.js":"10","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\utils\\queries.js":"11"},{"size":247,"mtime":1645820317793,"results":"12","hashOfConfig":"13"},{"size":600,"mtime":1645820317790,"results":"14","hashOfConfig":"13"},{"size":386,"mtime":1645718008072,"results":"15","hashOfConfig":"13"},{"size":5218,"mtime":1645820317792,"results":"16","hashOfConfig":"13"},{"size":116,"mtime":1645718008075,"results":"17","hashOfConfig":"13"},{"size":123,"mtime":1645718008079,"results":"18","hashOfConfig":"13"},{"size":124,"mtime":1645718008078,"results":"19","hashOfConfig":"13"},{"size":120,"mtime":1645718008077,"results":"20","hashOfConfig":"13"},{"size":4895,"mtime":1645820317794,"results":"21","hashOfConfig":"13"},{"size":2265,"mtime":1645820317796,"results":"22","hashOfConfig":"13"},{"size":193,"mtime":1645820317800,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rzcab1",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\index.js",[],"C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\App.js",["50","51"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport Dashboard from \"./components/Dashboard\";\nimport './style.css'\n\n// const App = () => <Dashboard />;\n\nconst client = new ApolloClient({\n    uri: '/graphql',\n    cache: new InMemoryCache(),\n  });\n  \n  function App() {\n    return (\n      <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Dashboard />\n           \n        </>\n      </Router>\n      </ApolloProvider>\n    );\n  }\n\nexport default App;\n","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\components\\NavBar.js",["52","53","54"],"import React from \"react\";\nimport {\n    CDBSidebar,\n    CDBSidebarContent,\n    CDBSidebarFooter,\n    CDBSidebarHeader,\n    CDBSidebarMenu,\n    CDBSidebarMenuItem,\n} from 'cdbreact';\nimport { NavLink } from 'react-router-dom';\nimport Active from '../pages/Active'\nimport Rejections from '../pages/Rejections'\nimport Inactive from '../pages/Inactive'\nimport Interviews from '../pages/Interviews'\nimport Home from '../pages/Home'\nimport Login from '../pages/Login'\n\n\nfunction NavBar({ currentPage, handlePageChange }) {\n    const renderPage = () => {\n        if (currentPage === 'Home') {\n            return <Home />;\n          }\n      if (currentPage === 'Active') {\n        return <Active />;\n      }\n      if (currentPage === 'Rejections') {\n        return <Rejections />;\n      }\n      if (currentPage === 'Inactive') {\n        return <Inactive />;\n        \n      }if (currentPage === 'Login') {\n        return <Login />;\n      }\n      return <Interviews />;\n      \n    };\n\n    return (\n        <><div className=\"bg-dark text-secondary px-1 py-2 text-start\">\n            <div className=\"py-5\">\n                <h1 className=\"display-5 fw-bold text-white\">My Applications</h1>\n            </div>\n        </div><div className=\"row\">\n                <div className=\"col-4\">\n                    <div style={{ display: 'flex', height: '100vh', overflow: 'scroll initial' }}>\n                        <CDBSidebar textColor=\"#fff\" backgroundColor=\"#333\">\n                            <CDBSidebarHeader>\n                                <a href=\"#Home\" className=\"text-decoration-none\" style={{ color: 'inherit' }} onClick={() => handlePageChange('Home')}>\n                                    Home\n                                </a>\n                            </CDBSidebarHeader>\n                            <CDBSidebarContent className=\"sidebar-content\">\n                                <CDBSidebarMenu>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#active\"\n                                            onClick={() => handlePageChange('Active')}\n                                            className={currentPage === 'Active' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            All Active Applications\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#rejections\"\n                                            onClick={() => handlePageChange('Rejections')}\n                                            className={currentPage === 'Rejections' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Rejections\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#inactive\"\n                                            onClick={() => handlePageChange('Inactive')}\n                                            className={currentPage === 'Inactive' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Inactive\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#interviews\"\n                                            onClick={() => handlePageChange('Interviews')}\n                                            className={currentPage === 'Interviews' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Interviews\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#Login\"\n                                            onClick={() => handlePageChange('Login')}\n                                            className={currentPage === 'Login' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Login\n                                        </a>\n                                    </li>\n\n\n\n                                </CDBSidebarMenu>\n                            </CDBSidebarContent>\n                        </CDBSidebar>\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div id=\"content\">\n\n                        {renderPage()}\n\n                    </div>\n\n                </div>\n\n            </div></>\n\n\n\n    );\n}\n\nexport default NavBar;\n\n\n","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Active.js",[],"C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Rejections.js",[],"C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Interviews.js",[],"C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Inactive.js",[],"C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Home.js",["55","56"],"import { React, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_APPLICATIONS } from '../utils/queries';\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function Home() {\n  const { loading, data } = useQuery(QUERY_APPLICATIONS);\n  const applications = data?.applications || [];\n\n\n  const [isOpen, setIsOpen] = useState(false);\n  const showModal = (e) => {\n    setIsOpen({ show: true })\n  };\n  const hideModal = () => {\n    setIsOpen(false)\n  };\n\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={showModal}\n      >\n        <span role=\"img\" aria-label=\"close\">\n          Add new application\n        </span>\n      </button>\n\n\n      {applications ? (\n        <>\n          <section>\n            <table>\n              <thead>\n                <tr>\n                  <th>Company Name</th>\n                  <th>Position</th>\n                  <th>Date Applied</th>\n                  <th>Delete</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {applications.map((application) => (\n                  <tr key={application.id}>\n                    <td>{application.companyName}</td>\n                    <td>{application.position}</td>\n                    <td>{application.dateApplied}</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <span role=\"img\" aria-label=\"close\">\n                          ✖️\n                        </span>\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </section>\n        </>\n      ) : (\n        <span>Hmm... seems that there are no applications here!</span>\n      )}\n\n      <Modal\n        show={isOpen}\n        onHide={hideModal}\n        size='lg'\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={hideModal} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-1\">\n    <div className=\"container\">\n        <div className=\"row \">\n            <div className=\"col\">\n\n            </div>\n                <form className=\"mt-4 new-app\">\n\n<div className=\"form-group\">\n    <label for=\"companyName\"><strong>Company Name*</strong></label>\n    <input type=\"input\" className=\"form-control companyName\" id=\"companyName\" name=\"companyName\"\n        aria-describedby=\"companyName\" placeholder=\"Company Name\"/>\n\n</div>\n\n<br/>\n<div className=\"form-group\">\n    <label for=\"age\"><strong>Position Title*</strong> </label>\n    <input type=\"input\" className=\"form-control\" id=\"position\" name=\"position\"\n        aria-describedby=\"position\" placeholder=\"Position Title\"/>\n\n</div>\n\n<br/>\n<div className=\"form-group\">\n    <label for=\"date\"><strong>Date Applied*</strong> </label>\n    <input type=\"input\" className=\"form-control\" id=\"date\" name=\"date\" aria-describedby=\"date\"\n        placeholder=\"ie 02/05/2021\"/>\n\n</div>\n<br/>\n<div className=\"form-group\">\n    <label for=\"location\"><strong>Location</strong></label>\n    <input type=\"input\" className=\"form-control\" id=\"location\" name=\"location\"\n        aria-describedby=\"location\" placeholder=\"City, State or Remote\"/>\n\n</div>\n<br/>\n<div className=\"form-group\">\n    <label for=\"description\"><strong>Job Description</strong></label>\n    <textarea type=\"input\" className=\"form-control\" id=\"description\" name=\"description\"\n        aria-describedby=\"description\" row=\"3\" placeholder=\"\"></textarea>\n\n</div>\n<br/>\n<div className=\"form-group\">\n    <label for=\"notes\"><strong>Additional Notes</strong></label>\n    <textarea type=\"input\" className=\"form-control\" id=\"notes\" name=\"notes\" aria-describedby=\"notes\"\n        row=\"3\" placeholder=\"\"></textarea>\n        </div>\n\n\n    <div className=\"hidden\">\n        <div className=\"form-check\">\n            <input type=\"radio\" className=\"form-check-input\" value={false} name=\"rej\" checked/> rejection\n        </div>\n        <div className=\"form-check\">\n            <input type=\"radio\" className=\"form-check-input\" value={false} name=\"inter\" checked/>\n            Interview\n\n        </div>\n        <div className=\"form-check\">\n            <input type=\"radio\" className=\"form-check-input\" value=\"null\" name=\"dateRej\" checked/> Date\n            rejected\n\n        </div>\n        <div className=\"form-check\">\n            <input type=\"radio\" className=\"form-check-input\" value=\"null\" name=\"intDate\" checked/>\n            Interview date\n\n        </div>\n    </div>\n    <br/>\n\n\n    <button type=\"submit\" className=\"btn spec-btn\">Add application</button>\n    <p>* indicates required field </p>\n</form>\n</div>\n</div>\n</div>\n\n\n      </Modal>\n    </div>\n  );\n}","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\pages\\Login.js",["57"],"import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { useMutation } from '@apollo/client';\n// import { LOGIN_USER } from '../utils/mutations';\n\n// import Auth from '../utils/auth';\n\n// const Login = (props) => {\n//   const [formState, setFormState] = useState({ email: '', password: '' });\n//   const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  \n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n\n//     setFormState({\n//       ...formState,\n//       [name]: value,\n//     });\n//   };\n\n  \n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n//     console.log(formState);\n//     try {\n//       const { data } = await login({\n//         variables: { ...formState },\n//       });\n\n//       Auth.login(data.login.token);\n//     } catch (e) {\n//       console.error(e);\n//     }\n\n    \n//     setFormState({\n//       email: '',\n//       password: '',\n//     });\n//   };\nexport default function Login() {\n    \n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n             \n                <form>\n              {/* <form onSubmit={handleFormSubmit}> */}\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                //   value={formState.email}\n                //   onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                //   value={formState.password}\n                //   onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            \n\n            \n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\n","C:\\Users\\lbonn\\Desktop\\fsf-projects\\homework\\Job-Tracker\\client\\src\\utils\\queries.js",[],{"ruleId":"58","severity":1,"message":"59","line":2,"column":35,"nodeType":"60","messageId":"61","endLine":2,"endColumn":41},{"ruleId":"58","severity":1,"message":"62","line":2,"column":43,"nodeType":"60","messageId":"61","endLine":2,"endColumn":48},{"ruleId":"58","severity":1,"message":"63","line":5,"column":5,"nodeType":"60","messageId":"61","endLine":5,"endColumn":21},{"ruleId":"58","severity":1,"message":"64","line":8,"column":5,"nodeType":"60","messageId":"61","endLine":8,"endColumn":23},{"ruleId":"58","severity":1,"message":"65","line":10,"column":10,"nodeType":"60","messageId":"61","endLine":10,"endColumn":17},{"ruleId":"58","severity":1,"message":"66","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"67","line":7,"column":11,"nodeType":"60","messageId":"61","endLine":7,"endColumn":18},{"ruleId":"58","severity":1,"message":"68","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'CDBSidebarFooter' is defined but never used.","'CDBSidebarMenuItem' is defined but never used.","'NavLink' is defined but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'useState' is defined but never used."]
