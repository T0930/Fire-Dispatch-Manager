<<<<<<< HEAD
[{"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\index.js":"1","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\App.js":"2","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Application.js":"3","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\components\\Dashboard.js":"4","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Active.js":"5","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Inactive.js":"6","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Interviews.js":"7","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Rejections.js":"8","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Home.js":"9","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\utils\\queries.js":"10","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\components\\NavBar.js":"11","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Login.js":"12","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\utils\\mutations.js":"13","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\utils\\Auth.js":"14","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Signup.js":"15"},{"size":249,"mtime":1646161395532,"results":"16","hashOfConfig":"17"},{"size":669,"mtime":1646161395530,"results":"18","hashOfConfig":"17"},{"size":2972,"mtime":1646161395534,"results":"19","hashOfConfig":"17"},{"size":1733,"mtime":1646165431863,"results":"20","hashOfConfig":"17"},{"size":2523,"mtime":1646161395533,"results":"21","hashOfConfig":"17"},{"size":120,"mtime":1646161395535,"results":"22","hashOfConfig":"17"},{"size":4617,"mtime":1646161517326,"results":"23","hashOfConfig":"17"},{"size":1475,"mtime":1646161517326,"results":"24","hashOfConfig":"17"},{"size":11025,"mtime":1646161517325,"results":"25","hashOfConfig":"17"},{"size":1153,"mtime":1646164467398,"results":"26","hashOfConfig":"17"},{"size":6706,"mtime":1646164669709,"results":"27","hashOfConfig":"17"},{"size":2427,"mtime":1646164577659,"results":"28","hashOfConfig":"17"},{"size":1658,"mtime":1646161517328,"results":"29","hashOfConfig":"17"},{"size":1042,"mtime":1646161395538,"results":"30","hashOfConfig":"17"},{"size":2723,"mtime":1646164554509,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"xudi82",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\index.js",[],["69","70"],"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\App.js",["71","72"],"import React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport Dashboard from \"./components/Dashboard\";\nimport Application from \"./pages/Application\";\n// import Inactive from \"./pages/Inactive\";\nimport './style.css'\n\n// const App = () => <Dashboard />;\n\nconst client = new ApolloClient({\n    uri: '/graphql',\n    cache: new InMemoryCache(),\n  });\n  \n  function App() {\n    return (\n      <ApolloProvider client={client}>\n      <Router>\n        \n          <Dashboard />\n           \n      </Router>\n      </ApolloProvider>\n    );\n  }\n\nexport default App;\n","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Application.js",["73"],"import Modal from \"react-bootstrap/Modal\";\nimport { React, useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_SINGLE_APPLICATION } from '../utils/queries';\n\nconst Application = () => {\n    const { applicationId } = useParams();\n  \n    const { loading, data } = useQuery(QUERY_SINGLE_APPLICATION, {\n      variables: { applicationId: applicationId },\n    });\n  \n    const applications = data?.application || {};\n    console.log(applications)\n    // console.log(applications.notes[0].noteText)\n    // console.log(applications.notes)\n    const allNotes = applications.notes\n    // console.log(allNotes[1].noteText)\n  \n    const [isOpen, setIsOpen] = useState(false);\n    const showModal = (e) => {\n      setIsOpen({ show: true })\n    };\n    const hideModal = () => {\n      setIsOpen(false)\n    };\n\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n    return (\n        <div className=\"card custom-card-sing-app\">\n        <h4 className=\"card-header text-center\">\n          {applications.companyName}\n        </h4>\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-center\">{applications.position}</h5>\n          <p className=\"card-text\"><strong>Job Description:</strong> {applications.description} </p>\n          <p className=\"card-text\"><strong>Date Applied:</strong> {applications.dateApplied} </p>\n          <p className=\"card-text\"><strong>Location:</strong> {applications.location} </p>\n          <p className=\"card-text\"><strong>Notes:</strong> </p>\n              <div className =\"card\">\n                {allNotes.map((note) => (\n                          <p className=\"card-text\">{note.noteText} </p>\n\n\n                ))}</div>\n                <div className=\"noteBtn\">\n      <button\n        type=\"button\"\n        onClick={showModal}\n       className=\"notesBtn\" \n      >\n        <span role=\"img\" aria-label=\"close\">\n          Add Note\n        </span>\n      </button>\n</div>\n      <Modal\n        show={isOpen}\n        onHide={hideModal}\n        size='lg'\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={hideModal} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-2\">\n    <div className=\"container\">\n        <div className=\"row \">\n            <div className=\"col\">\n\n            </div>\n                <form className=\"mt-4 new-app\">\n\n\n<div className=\"form-group\">\n\n    <textarea type=\"input\" className=\"form-control\" id=\"notes\" name=\"notes\" aria-describedby=\"notes\"\n        rows=\"5\" placeholder=\"\"></textarea>\n        </div>\n\n\n    <br/>\n\n\n\n\n\n\n<div className=\"noteBtn\">\n    <button type=\"submit\" className=\"notesBtn2\">Add Note</button>\n</div>\n</form>\n</div>\n</div>\n</div>\n\n\n      </Modal>\n\n\n\n        </div>\n\n      </div>\n\n\n    );\n  };\n  \n  export default Application;\n  ","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Active.js",["74","75","76","77","78"],"import { React, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_APPLICATIONS } from '../utils/queries';\n// import Modal from \"react-bootstrap/Modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nconst check = <FontAwesomeIcon icon={faCheck} size=\"1x\" fixedWidth className=\"check\"/>\nconst reject = <FontAwesomeIcon icon={faXmark} size=\"1x\" fixedWidth className=\"reject\"/>\n\n\nexport default function Home() {\n  const { loading, data } = useQuery(QUERY_APPLICATIONS);\n  const applications = data?.applications || [];\n  console.log(applications)\n\n\n//   const [isOpen, setIsOpen] = useState(false);\n//   const showModal = (e) => {\n//     setIsOpen({ show: true })\n//   };\n//   const hideModal = () => {\n//     setIsOpen(false)\n//   };\n\n\n  return (\n    <div>\n      {applications ? (\n        <>\n          <section>\n            <table>\n              <thead>\n                <tr>\n                <th>Date Applied</th>\n                  <th>Company Name</th>\n                  <th>Position</th>\n                  <th>Location</th>\n                  <th>Update</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {applications.map((application) => (\n                  <tr key={application.id}>\n                    <td>{application.dateApplied}</td>\n                    <td>{application.companyName}</td>\n                    <td>{application.position}</td>\n                    <td>{application.location}</td>\n\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"yayInterview\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <a className=\"check\">{check}</a>\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"booReject\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <a className=\"reject\">{reject}</a>\n                      </button>\n\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </section>\n        </>\n      ) : (\n        <span>Hmm... seems that there are no applications here!</span>\n      )}\n\n      \n    </div>\n  );\n}","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Inactive.js",[],"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Interviews.js",["79","80","81","82"],"import Modal from \"react-bootstrap/Modal\";\nimport { React, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_INTERVIEWS } from '../utils/queries';\n\nexport default function Interviews() {\n    // const { interview } = useParams();\n    const { loading, data } = useQuery(QUERY_INTERVIEWS)\n\n    const interviews = data?.interview || [];;\n    console.log(interviews)\n    const allNotes = interviews.notes\n\n    const [isOpen, setIsOpen] = useState(false);\n    const showModal = (e) => {\n        setIsOpen({ show: true })\n    };\n    const hideModal = () => {\n        setIsOpen(false)\n    };\n    return (\n        <div>\n            <h1 className=\"text-center\">My Interviews</h1>\n            {interviews ? ( \n                <div>\n            {interviews.map((interview) => (\n                <div className=\"card custom-card-sing-app\">\n                    <h4 className=\"card-header text-center\">\n                        {interview.companyName}\n                    </h4>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title text-center\"><strong>{interview.position}</strong></h5>\n                        <h6 className=\"card-title text-center\" style={{ color: 'red' }}>Interview Date: {interview.interviewDate}</h6>\n                        <h6 className=\"card-title text-center\" style={{ color: 'red' }}>Interview Time: {interview.interviewTime}</h6>\n                        <h6 className=\"card-title text-center\" style={{ color: 'red' }}>Interview Location: {interview.interviewLocation}</h6>\n                        <p className=\"card-text\"><strong>Job Description:</strong> {interview.description} </p>\n                        <p className=\"card-text\"><strong>Date Applied:</strong> {interview.dateApplied} </p>\n                        <p className=\"card-text\"><strong>Job Location:</strong> {interview.location} </p>\n                        <p className=\"card-text\"><strong>Notes:</strong> </p>\n                        <div className=\"card\">\n                            {interview.notes.map((note) => (\n                                <p className=\"card-text\">{note.noteText} </p>\n\n\n                            ))}</div>\n                        <div className=\"noteBtn\">\n                            <button\n                                type=\"button\"\n                                onClick={showModal}\n                                className=\"notesBtn\"\n                            >\n                                <span role=\"img\" aria-label=\"close\">\n                                    Add Note\n                                </span>\n                            </button>\n                        </div>\n                        <Modal\n                            show={isOpen}\n                            onHide={hideModal}\n                            size='lg'\n                            aria-labelledby=\"contained-modal-title-vcenter\"\n                            centered\n                        >\n                            <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={hideModal} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-2\">\n                                <div className=\"container\">\n                                    <div className=\"row \">\n                                        <div className=\"col\">\n\n                                        </div>\n                                        <form className=\"mt-4 new-app\">\n\n\n                                            <div className=\"form-group\">\n\n                                                <textarea type=\"input\" className=\"form-control\" id=\"notes\" name=\"notes\" aria-describedby=\"notes\"\n                                                    rows=\"5\" placeholder=\"\"></textarea>\n                                            </div>\n\n\n                                            <br />\n\n\n\n\n\n\n                                            <div className=\"noteBtn\">\n                                                <button type=\"submit\" className=\"notesBtn2\">Add Note</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                        </Modal>\n\n                    </div>\n                </div>\n\n            ))}\n            </div>\n            ) : (\n<span>Hmm... seems there are no applications here!</span>\n            )}\n        </div>\n\n\n    );\n};\n\n","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Rejections.js",["83","84"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_REJECTIONS } from '../utils/queries';\n\nexport default function Rejection() {\n\n    const { loading, data } = useQuery(QUERY_REJECTIONS)\n\n      const rejections = data?.rejection || [];;\n      console.log(rejections)\n\n\n\n    return ( \n        <div>\n                        <h1 className=\"text-center\">Rejected Applications</h1>\n     {rejections ? (\n              <section>\n                <table>\n                  <thead>\n                    <tr>\n                    <th>Date Applied</th>\n                      <th>Company Name</th>\n                      <th>Position</th>\n                      <th>Location</th>\n                      <th>Date Rejected</th>\n                    </tr>\n                  </thead>\n    \n                  <tbody>\n                    {rejections.map((rej) => (\n                      <tr key={rej.id}>\n                        <td>{rej.dateApplied}</td>\n                        <td>{rej.companyName}</td>\n                        <td>{rej.position}</td>\n                        <td>{rej.location}</td>\n                        <td>{rej.dateRejected}</td>\n    \n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </section>\n\n          ) : (\n            <span>Hmm... seems that there are no applications here!</span>\n          )}\n          </div> \n\n\n    );\n}","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Home.js",["85","86","87","88","89","90","91"],"import { React, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\nimport { QUERY_APPLICATIONS } from '../utils/queries';\nimport { EDIT_INTERVIEW, ADD_APPLICATION } from '../utils/mutations';\nimport Modal from \"react-bootstrap/Modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { faAnglesRight} from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\n\n\nconst check = <FontAwesomeIcon icon={faCheck} size=\"1x\" fixedWidth className=\"check\"/>\nconst reject = <FontAwesomeIcon icon={faXmark} size=\"1x\" fixedWidth className=\"reject\"/>\nconst angles = <FontAwesomeIcon icon={faAnglesRight} size=\"1x\" fixedWidth className=\"moreInfo\"/>\n\n\nexport default function Home() {\n  const [applicationData, setApplicationData] = useState({ \n    companyName: '',\n    position: '',\n    dateApplied: '',\n  })\n  const [ addApplication ]  = useMutation(ADD_APPLICATION);\n  const { loading, data } = useQuery(QUERY_APPLICATIONS);\n  const applications = data?.applications || [];\n  console.log(applications)\n\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setApplicationData({...applicationData, [name]: value})\n  }\n\nconst handleFormSubmit = async (event) => {\n  event.preventDefault();\n  console.log(applicationData.dateApplied)\n  try{\n  const { data } = await addApplication({ \n    variables: {...applicationData}\n  })\n  console.log(data)\n  setApplicationData({\n    companyName: '',\n    position: '',\n    dateApplied: '',\n  })\n} catch (e) {\n  console.error(e)\n}\nwindow.location.reload();\n}\n\n\n\n  const [editInterview, {error}] = useMutation(EDIT_INTERVIEW);\n  const [interviewData, setInterviewData] = useState({ \n    interviewLocation: '',\n    interviewTime: '',\n    interviewDate: '',\n    interview: true,\n    interviewId: ''\n\n  })\n  const handleInputChangeI = (event) => {\n    const { name, value } = event.target;\n    // console.log('hello')\n    // console.log(event.currentTarget.id)\n    setInterviewData({...interviewData, [name]: value})\n    // console.log(...interviewData)\n  }\n\nconst handleFormSubmitI = async (event) => {\n  event.preventDefault();\n  console.log('hello')\n  // console.log(interviewData.interviewDate)\n  setInterviewData({interview: true})\n  console.log({...interviewData})\n  try{\n  const { data } = await editInterview({ \n    variables: {\n      interviewLocation: interviewData.interviewLocation,\n      interviewDate: interviewData.interviewDate,\n      interviewTime: interviewData.interviewTime,\n      interview: interviewData.interview,\n      applicationId: interviewData.interviewId}\n  })\n  console.log(data)\n  setInterviewData({\n    interviewDate: '',\n    interviewTime: '',\n    interviewLocation: '',\n    applicationId: '',\n  })\n} catch (e) {\n  console.error(e)\n}\nwindow.location.reload();\n}\n\nconst handleRadioChangeI = async (event) =>{\n  setInterviewData({interview: true})\n}\n\n  const [isOpen, setIsOpen] = useState('');\n  const showModal = (e) => {\n    setIsOpen({ show: true })\n  };\n  const hideModal = () => {\n    setIsOpen(false)\n  };\n\n  const [isOpenI, setIsOpenI] = useState('');\n  const showModalI = (e) => {\n    console.log(e.currentTarget.id)\n    console.log(e.currentTarget.value)\n setInterviewData({interviewId: e.currentTarget.id})\n console.log(interviewData)\n    setIsOpenI({ show: true })\n  };\n  const hideModalI = () => {\n    setIsOpenI(false)\n  };\n  \n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={showModal}\n      >\n        <span role=\"img\" aria-label=\"close\">\n          Add new application\n        </span>\n      </button>\n\n\n      {applications ? (\n        <>\n          <section>\n            <table>\n              <thead>\n                <tr>\n                <th>Date Applied</th>\n                  <th>Company Name</th>\n                  <th>Position</th>\n                  <th>Interview</th>\n                  <th>Location</th>\n                  <th>Update</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {applications.map((application) => (\n                  <tr key={application.id}>\n                    <td>{application.dateApplied}</td>\n                    <td>{application.companyName}</td>\n                    <td>{application.position}</td>\n                    <td>{application.interview.toString()}</td>\n                    <td>{application.location}</td>\n\n                    <td>\n                      <button\n                        type=\"button\"\n                        onClick={showModalI}\n                        className=\"interviewBtn\"\n                        id={application._id}\n                        value={application.interview}\n                        // onClick={() => editInterview(application._id)}\n                        // onClick={() => console.log(application._id)}\n                      >\n                        <a className=\"check\">{check}</a>\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"rejectionBtn\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <a className=\"reject\">{reject}</a>\n                      </button>\n                      <Link\n                        // type=\"button\"\n                        className=\"moreInfoBtn\"\n                        to={`/application/${application._id}`}\n                        // onClick={() => console.log(application._id)}\n                      >\n                        <a className=\"moreInfo\">{angles}</a>\n                     </Link>\n\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </section>\n        </>\n      ) : (\n        <span>Hmm... seems that there are no applications here!</span>\n      )}\n\n      <Modal\n        show={isOpen}\n        onHide={hideModal}\n        size='lg'\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={hideModal} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-1\">\n    <div className=\"container\">\n        <div className=\"row \">\n            <div className=\"col\">\n\n            </div>\n                <form className=\"mt-4 new-app\" onSubmit={handleFormSubmit}>\n                  {/* add onsubmit as attribute with handleformsubmit inside form*/}\n\n<div className=\"form-group\">\n    <label for=\"companyName\"><strong>Company Name*</strong></label>\n    <input type=\"input\" className=\"form-control companyName\" id=\"companyName\" name=\"companyName\"\n        aria-describedby=\"companyName\" placeholder=\"Company Name\" onChange={handleInputChange} value={applicationData.companyName}/>\n        {/* add 2 attributes inside input 1 being onChange set = {handleinputchange} the other being value set = applicationData.whateverinfo (companyName)  */}\n\n</div>\n\n<br/>\n<div className=\"form-group\">\n    <label for=\"age\"><strong>Position Title*</strong> </label>\n    <input type=\"input\" className=\"form-control\" id=\"position\" name=\"position\"\n        aria-describedby=\"position\" placeholder=\"Position Title\" onChange={handleInputChange} value={applicationData.position}/>\n\n</div>\n\n<br/>\n<div className=\"form-group\">\n    <label for=\"date\"><strong>Date Applied*</strong> </label>\n    <input type=\"input\" className=\"form-control\" id=\"date\" name=\"dateApplied\" aria-describedby=\"date\"\n        placeholder=\"ie 02/05/2021\" onChange={handleInputChange} value={applicationData.dateApplied}/>\n\n</div>\n<br/>\n<div className=\"form-group\">\n    <label for=\"location\"><strong>Location</strong></label>\n    <input type=\"input\" className=\"form-control\" id=\"location\" name=\"location\"\n        aria-describedby=\"location\" placeholder=\"City, State or Remote\" onChange={handleInputChange} value={applicationData.location}/>\n\n</div>\n<br/>\n<div className=\"form-group\">\n    <label for=\"description\"><strong>Job Description</strong></label>\n    <textarea type=\"input\" className=\"form-control\" id=\"description\" name=\"description\"\n        aria-describedby=\"description\" row=\"3\" placeholder=\"\" onChange={handleInputChange} value={applicationData.description}></textarea>\n\n</div>\n<br/>\n<div className=\"form-group\">\n    <label for=\"notes\"><strong>Additional Notes</strong></label>\n    <textarea type=\"input\" className=\"form-control\" id=\"notes\" name=\"notes\" aria-describedby=\"notes\"\n        row=\"3\" placeholder=\"\"></textarea>\n        </div>\n\n\n    <br/>\n\n\n    <button type=\"submit\" onClick={handleFormSubmit}>Add application</button>\n    <p>* indicates required field </p>\n</form>\n</div>\n</div>\n</div>\n\n\n      </Modal>\n\n\n      <Modal\n        show={isOpenI}\n        onHide={hideModalI}\n        size='lg'\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={handleFormSubmitI, hideModalI} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-1\">\n    <div className=\"container\">\n        <div className=\"row \">\n            <div className=\"col\">\n\n            </div>\n                <form className=\"mt-4 new-app\" onSubmit={handleFormSubmitI}>\n\n<h2 className=\"text-center\">Congratulations on your Interview!</h2>\n<div className=\"form-group\">\n    <label for=\"interviewDate\"><strong>When is it?</strong></label>\n    <input type=\"input\" className=\"form-control interviewDate\" id=\"interviewDate\" name=\"interviewDate\"\n        aria-describedby=\"interviewDate\" placeholder=\"ie 04/15/2022\" onChange={handleInputChangeI} value={interviewData.interviewDate}/>\n       \n\n</div>\n\n<br/>\n<div className=\"form-group\">\n    <label for=\"age\"><strong>What time is it?</strong> </label>\n    <input type=\"input\" className=\"form-control\" id=\"interviewTime\" name=\"interviewTime\"\n        aria-describedby=\"interviewTime\" placeholder=\"ie 2:00PM\" onChange={handleInputChangeI} value={interviewData.interviewTime}/>\n\n</div>\n\n<br/>\n<div className=\"form-group\">\n    <label for=\"date\"><strong>Where is it?</strong> </label>\n    <input type=\"input\" className=\"form-control\" id=\"interviewLocation\" name=\"interviewLocation\" aria-describedby=\"interviewLocation\"\n        placeholder=\"ie virtual or on-site\" onChange={handleInputChangeI} value={interviewData.interviewLocation}/>\n\n</div>\n<br/>\n<div class=\"hidden\">\n                <label for=\"pet-type\"><strong>Type</strong></label>\n                <div class=\"form-check\">\n                    <input type=\"radio\" class=\"form-check-input\" value={true} name=\"interview\" onSiteChanged={handleRadioChangeI} checked/>\n                </div>\n                </div>\n\n    <button type=\"submit\" onClick={handleFormSubmitI}>Update Status</button>\n\n</form>\n</div>\n</div>\n</div>\n\n\n      </Modal>\n    </div>\n  );\n}","C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\utils\\queries.js",[],"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\components\\NavBar.js",["92","93","94","95","96","97","98"],"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Login.js",[],"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\utils\\mutations.js",[],"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\utils\\Auth.js",[],"C:\\Users\\zhkim\\Desktop\\Job-Tracker\\client\\src\\pages\\Signup.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":35,"nodeType":"105","messageId":"106","endLine":2,"endColumn":40},{"ruleId":"103","severity":1,"message":"107","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":19},{"ruleId":"103","severity":1,"message":"108","line":2,"column":27,"nodeType":"105","messageId":"106","endLine":2,"endColumn":36},{"ruleId":"103","severity":1,"message":"109","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"108","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"110","line":13,"column":11,"nodeType":"105","messageId":"106","endLine":13,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":57,"column":25,"nodeType":"113","endLine":57,"endColumn":46},{"ruleId":"111","severity":1,"message":"112","line":64,"column":25,"nodeType":"113","endLine":64,"endColumn":47},{"ruleId":"103","severity":1,"message":"108","line":2,"column":27,"nodeType":"105","messageId":"106","endLine":2,"endColumn":36},{"ruleId":"103","severity":1,"message":"114","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":19},{"ruleId":"103","severity":1,"message":"110","line":9,"column":13,"nodeType":"105","messageId":"106","endLine":9,"endColumn":20},{"ruleId":"103","severity":1,"message":"115","line":13,"column":11,"nodeType":"105","messageId":"106","endLine":13,"endColumn":19},{"ruleId":"103","severity":1,"message":"114","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":19},{"ruleId":"103","severity":1,"message":"110","line":8,"column":13,"nodeType":"105","messageId":"106","endLine":8,"endColumn":20},{"ruleId":"103","severity":1,"message":"108","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"110","line":26,"column":11,"nodeType":"105","messageId":"106","endLine":26,"endColumn":18},{"ruleId":"103","severity":1,"message":"116","line":57,"column":26,"nodeType":"105","messageId":"106","endLine":57,"endColumn":31},{"ruleId":"111","severity":1,"message":"112","line":173,"column":25,"nodeType":"113","endLine":173,"endColumn":46},{"ruleId":"111","severity":1,"message":"112","line":180,"column":25,"nodeType":"113","endLine":180,"endColumn":47},{"ruleId":"111","severity":1,"message":"112","line":188,"column":25,"nodeType":"113","endLine":188,"endColumn":49},{"ruleId":"117","severity":1,"message":"118","line":284,"column":118,"nodeType":"119","messageId":"120","endLine":284,"endColumn":119},{"ruleId":"121","severity":1,"message":"122","line":34,"column":45,"nodeType":"123","messageId":"124","endLine":34,"endColumn":172},{"ruleId":"121","severity":1,"message":"122","line":43,"column":45,"nodeType":"123","messageId":"124","endLine":43,"endColumn":176},{"ruleId":"121","severity":1,"message":"122","line":52,"column":45,"nodeType":"123","messageId":"124","endLine":52,"endColumn":176},{"ruleId":"121","severity":1,"message":"122","line":61,"column":45,"nodeType":"123","messageId":"124","endLine":61,"endColumn":174},{"ruleId":"121","severity":1,"message":"122","line":70,"column":45,"nodeType":"123","messageId":"124","endLine":70,"endColumn":171},{"ruleId":"121","severity":1,"message":"122","line":79,"column":45,"nodeType":"123","messageId":"124","endLine":79,"endColumn":172},{"ruleId":"121","severity":1,"message":"122","line":102,"column":45,"nodeType":"123","messageId":"124","endLine":102,"endColumn":172},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Application' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'loading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useParams' is defined but never used.","'allNotes' is assigned a value but never used.","'error' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]
=======
[{"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/index.js":"1","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/App.js":"2","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/Dashboard.js":"3","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Application.js":"4","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/NavBar.js":"5","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Inactive.js":"6","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Interviews.js":"7","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Login.js":"8","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Rejections.js":"9","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Active.js":"10","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Home.js":"11","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/queries.js":"12","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/mutations.js":"13","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/Auth.js":"14"},{"size":249,"mtime":1646083466974,"results":"15","hashOfConfig":"16"},{"size":669,"mtime":1646083466973,"results":"17","hashOfConfig":"16"},{"size":1552,"mtime":1646083466973,"results":"18","hashOfConfig":"16"},{"size":2972,"mtime":1646113752105,"results":"19","hashOfConfig":"16"},{"size":5336,"mtime":1646162146735,"results":"20","hashOfConfig":"16"},{"size":120,"mtime":1645726751242,"results":"21","hashOfConfig":"16"},{"size":4617,"mtime":1646113756795,"results":"22","hashOfConfig":"16"},{"size":2670,"mtime":1646160533662,"results":"23","hashOfConfig":"16"},{"size":1475,"mtime":1646113756795,"results":"24","hashOfConfig":"16"},{"size":2523,"mtime":1646083466975,"results":"25","hashOfConfig":"16"},{"size":13453,"mtime":1646164091129,"results":"26","hashOfConfig":"16"},{"size":995,"mtime":1646113756796,"results":"27","hashOfConfig":"16"},{"size":1880,"mtime":1646163820663,"results":"28","hashOfConfig":"16"},{"size":1042,"mtime":1645820159284,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ecb1ef",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/index.js",[],["67","68"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/App.js",["69","70"],"import React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport Dashboard from \"./components/Dashboard\";\nimport Application from \"./pages/Application\";\n// import Inactive from \"./pages/Inactive\";\nimport './style.css'\n\n// const App = () => <Dashboard />;\n\nconst client = new ApolloClient({\n    uri: '/graphql',\n    cache: new InMemoryCache(),\n  });\n  \n  function App() {\n    return (\n      <ApolloProvider client={client}>\n      <Router>\n        \n          <Dashboard />\n           \n      </Router>\n      </ApolloProvider>\n    );\n  }\n\nexport default App;\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/Dashboard.js",["71"],"import React, { useState } from 'react';\nimport NavBar from './NavBar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport Application from \"../pages/Application\";\nimport Active from '../pages/Active'\nimport Rejections from '../pages/Rejections'\nimport Inactive from '../pages/Inactive'\nimport Interviews from '../pages/Interviews'\nimport Home from '../pages/Home'\nimport Login from '../pages/Login'\n\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n});\n\n\nfunction Dashboard() {\n    const [currentPage, setCurrentPage] = useState('Home');\n \n  \n    const handlePageChange = (page) => setCurrentPage(page);\n  \n    return (\n \n      <ApolloProvider client={client}>\n            <NavBar currentPage={currentPage} handlePageChange={handlePageChange} >\n          <Router>\n\n        <Switch>\n          <div>\n        <Route path=\"/active\">\n              <Active />\n        </Route>\n        <Route path=\"/interviews\">\n              <Interviews />\n        </Route>\n        <Route path=\"/rejections\">\n              <Rejections />\n        </Route>\n        <Route path=\"/inactive\">\n              <Inactive />\n        </Route>\n        <Route path=\"/application/:applicationId\">\n              <Application />\n      </Route>\n      <Route exact path=\"/\">\n              <Home />\n        </Route>\n\n\n      \n      </div>\n      </Switch>\n      </Router>\n      </NavBar>\n      </ApolloProvider>\n\n    );\n  }\n\nexport default Dashboard;","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Application.js",["72"],"import Modal from \"react-bootstrap/Modal\";\nimport { React, useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_SINGLE_APPLICATION } from '../utils/queries';\n\nconst Application = () => {\n    const { applicationId } = useParams();\n  \n    const { loading, data } = useQuery(QUERY_SINGLE_APPLICATION, {\n      variables: { applicationId: applicationId },\n    });\n  \n    const applications = data?.application || {};\n    console.log(applications)\n    // console.log(applications.notes[0].noteText)\n    // console.log(applications.notes)\n    const allNotes = applications.notes\n    // console.log(allNotes[1].noteText)\n  \n    const [isOpen, setIsOpen] = useState(false);\n    const showModal = (e) => {\n      setIsOpen({ show: true })\n    };\n    const hideModal = () => {\n      setIsOpen(false)\n    };\n\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n    return (\n        <div className=\"card custom-card-sing-app\">\n        <h4 className=\"card-header text-center\">\n          {applications.companyName}\n        </h4>\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-center\">{applications.position}</h5>\n          <p className=\"card-text\"><strong>Job Description:</strong> {applications.description} </p>\n          <p className=\"card-text\"><strong>Date Applied:</strong> {applications.dateApplied} </p>\n          <p className=\"card-text\"><strong>Location:</strong> {applications.location} </p>\n          <p className=\"card-text\"><strong>Notes:</strong> </p>\n              <div className =\"card\">\n                {allNotes.map((note) => (\n                          <p className=\"card-text\">{note.noteText} </p>\n\n\n                ))}</div>\n                <div className=\"noteBtn\">\n      <button\n        type=\"button\"\n        onClick={showModal}\n       className=\"notesBtn\" \n      >\n        <span role=\"img\" aria-label=\"close\">\n          Add Note\n        </span>\n      </button>\n</div>\n      <Modal\n        show={isOpen}\n        onHide={hideModal}\n        size='lg'\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={hideModal} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-2\">\n    <div className=\"container\">\n        <div className=\"row \">\n            <div className=\"col\">\n\n            </div>\n                <form className=\"mt-4 new-app\">\n\n\n<div className=\"form-group\">\n\n    <textarea type=\"input\" className=\"form-control\" id=\"notes\" name=\"notes\" aria-describedby=\"notes\"\n        rows=\"5\" placeholder=\"\"></textarea>\n        </div>\n\n\n    <br/>\n\n\n\n\n\n\n<div className=\"noteBtn\">\n    <button type=\"submit\" className=\"notesBtn2\">Add Note</button>\n</div>\n</form>\n</div>\n</div>\n</div>\n\n\n      </Modal>\n\n\n\n        </div>\n\n      </div>\n\n\n    );\n  };\n  \n  export default Application;\n  ","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/components/NavBar.js",["73","74","75","76","77"],"import React from \"react\";\nimport {\n    CDBSidebar,\n    CDBSidebarContent,\n    CDBSidebarFooter,\n    CDBSidebarHeader,\n    CDBSidebarMenu,\n} from 'cdbreact';\n\n\nfunction NavBar(props)  {\n\n    return (\n        <><div className=\"bg-dark text-secondary px-1 py-2 text-start\">\n            <div className=\"py-5\">\n                <h1 className=\"display-5 fw-bold text-white\">My Applications</h1>\n            </div>\n        </div><div className=\"row\">\n                <div className=\"col-2\">\n                    <div style={{ display: 'flex', height: '100vh', overflow: 'scroll initial' }}>\n                        <CDBSidebar textColor=\"#fff\" backgroundColor=\"#333\">\n                            <CDBSidebarHeader>\n                                <a href=\"/\" className=\"text-decoration-none\" style={{ color: 'inherit' }} onClick={() => props.handlePageChange('Home')}>\n                                    Home\n                                </a>\n                            </CDBSidebarHeader>\n                            <CDBSidebarContent className=\"sidebar-content\">\n                                <CDBSidebarMenu>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"/active\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => props.handlePageChange('Active')}\n                                            className={props.currentPage === 'Active' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            All Applications\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"/interviews\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => props.handlePageChange('Interviews')}\n                                            className={props.currentPage === 'Interviews' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Interviews\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"/rejections\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => props.handlePageChange('Rejections')}\n                                            className={props.currentPage === 'Rejections' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Rejections\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"/inactive\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => props.handlePageChange('Inactive')}\n                                            className={props.currentPage === 'Inactive' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Inactive\n                                        </a>\n                                    </li>\n\n\n\n\n\n                                </CDBSidebarMenu>\n                            </CDBSidebarContent>\n\n                            <CDBSidebarFooter style={{ textAlign: 'center' }}>\n                                <div\n                                    style={{\n                                        padding: '20px 5px',\n                                    }}\n                                >\n                                    \n                                    <a\n                                            href=\"#Logout\"\n                                            className=\"text-decoration-none\" style={{ color: 'inherit' }}\n                                            onClick={() => props.handlePageChange('Logout')}\n                                            className={props.currentPage === 'Logout' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Logout\n                                        </a>\n                                </div>\n                            </CDBSidebarFooter>\n                        </CDBSidebar>\n                    </div>\n                </div>\n                <div className=\"col-9\">\n                    <div id=\"content align-self-end\">\n\n                        {props.children}\n\n                    </div>\n\n                </div>\n\n            </div></>\n\n\n\n    );\n}\n\nexport default NavBar;\n\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Inactive.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Interviews.js",["78","79","80","81"],"import Modal from \"react-bootstrap/Modal\";\nimport { React, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_INTERVIEWS } from '../utils/queries';\n\nexport default function Interviews() {\n    // const { interview } = useParams();\n    const { loading, data } = useQuery(QUERY_INTERVIEWS)\n\n    const interviews = data?.interview || [];;\n    console.log(interviews)\n    const allNotes = interviews.notes\n\n    const [isOpen, setIsOpen] = useState(false);\n    const showModal = (e) => {\n        setIsOpen({ show: true })\n    };\n    const hideModal = () => {\n        setIsOpen(false)\n    };\n    return (\n        <div>\n            <h1 className=\"text-center\">My Interviews</h1>\n            {interviews ? ( \n                <div>\n            {interviews.map((interview) => (\n                <div className=\"card custom-card-sing-app\">\n                    <h4 className=\"card-header text-center\">\n                        {interview.companyName}\n                    </h4>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title text-center\"><strong>{interview.position}</strong></h5>\n                        <h6 className=\"card-title text-center\" style={{ color: 'red' }}>Interview Date: {interview.interviewDate}</h6>\n                        <h6 className=\"card-title text-center\" style={{ color: 'red' }}>Interview Time: {interview.interviewTime}</h6>\n                        <h6 className=\"card-title text-center\" style={{ color: 'red' }}>Interview Location: {interview.interviewLocation}</h6>\n                        <p className=\"card-text\"><strong>Job Description:</strong> {interview.description} </p>\n                        <p className=\"card-text\"><strong>Date Applied:</strong> {interview.dateApplied} </p>\n                        <p className=\"card-text\"><strong>Job Location:</strong> {interview.location} </p>\n                        <p className=\"card-text\"><strong>Notes:</strong> </p>\n                        <div className=\"card\">\n                            {interview.notes.map((note) => (\n                                <p className=\"card-text\">{note.noteText} </p>\n\n\n                            ))}</div>\n                        <div className=\"noteBtn\">\n                            <button\n                                type=\"button\"\n                                onClick={showModal}\n                                className=\"notesBtn\"\n                            >\n                                <span role=\"img\" aria-label=\"close\">\n                                    Add Note\n                                </span>\n                            </button>\n                        </div>\n                        <Modal\n                            show={isOpen}\n                            onHide={hideModal}\n                            size='lg'\n                            aria-labelledby=\"contained-modal-title-vcenter\"\n                            centered\n                        >\n                            <div className=\"modal-header border-0\"><button className=\"btn-close\" type=\"button\" onClick={hideModal} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div className=\"modal-body  pb-2\">\n                                <div className=\"container\">\n                                    <div className=\"row \">\n                                        <div className=\"col\">\n\n                                        </div>\n                                        <form className=\"mt-4 new-app\">\n\n\n                                            <div className=\"form-group\">\n\n                                                <textarea type=\"input\" className=\"form-control\" id=\"notes\" name=\"notes\" aria-describedby=\"notes\"\n                                                    rows=\"5\" placeholder=\"\"></textarea>\n                                            </div>\n\n\n                                            <br />\n\n\n\n\n\n\n                                            <div className=\"noteBtn\">\n                                                <button type=\"submit\" className=\"notesBtn2\">Add Note</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                        </Modal>\n\n                    </div>\n                </div>\n\n            ))}\n            </div>\n            ) : (\n<span>Hmm... seems there are no applications here!</span>\n            )}\n        </div>\n\n\n    );\n};\n\n","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Login.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Rejections.js",["82","83"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_REJECTIONS } from '../utils/queries';\n\nexport default function Rejection() {\n\n    const { loading, data } = useQuery(QUERY_REJECTIONS)\n\n      const rejections = data?.rejection || [];;\n      console.log(rejections)\n\n\n\n    return ( \n        <div>\n                        <h1 className=\"text-center\">Rejected Applications</h1>\n     {rejections ? (\n              <section>\n                <table>\n                  <thead>\n                    <tr>\n                    <th>Date Applied</th>\n                      <th>Company Name</th>\n                      <th>Position</th>\n                      <th>Location</th>\n                      <th>Date Rejected</th>\n                    </tr>\n                  </thead>\n    \n                  <tbody>\n                    {rejections.map((rej) => (\n                      <tr key={rej.id}>\n                        <td>{rej.dateApplied}</td>\n                        <td>{rej.companyName}</td>\n                        <td>{rej.position}</td>\n                        <td>{rej.location}</td>\n                        <td>{rej.dateRejected}</td>\n    \n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </section>\n\n          ) : (\n            <span>Hmm... seems that there are no applications here!</span>\n          )}\n          </div> \n\n\n    );\n}","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Active.js",["84","85","86","87","88"],"import { React, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_APPLICATIONS } from '../utils/queries';\n// import Modal from \"react-bootstrap/Modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nconst check = <FontAwesomeIcon icon={faCheck} size=\"1x\" fixedWidth className=\"check\"/>\nconst reject = <FontAwesomeIcon icon={faXmark} size=\"1x\" fixedWidth className=\"reject\"/>\n\n\nexport default function Home() {\n  const { loading, data } = useQuery(QUERY_APPLICATIONS);\n  const applications = data?.applications || [];\n  console.log(applications)\n\n\n//   const [isOpen, setIsOpen] = useState(false);\n//   const showModal = (e) => {\n//     setIsOpen({ show: true })\n//   };\n//   const hideModal = () => {\n//     setIsOpen(false)\n//   };\n\n\n  return (\n    <div>\n      {applications ? (\n        <>\n          <section>\n            <table>\n              <thead>\n                <tr>\n                <th>Date Applied</th>\n                  <th>Company Name</th>\n                  <th>Position</th>\n                  <th>Location</th>\n                  <th>Update</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {applications.map((application) => (\n                  <tr key={application.id}>\n                    <td>{application.dateApplied}</td>\n                    <td>{application.companyName}</td>\n                    <td>{application.position}</td>\n                    <td>{application.location}</td>\n\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"yayInterview\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <a className=\"check\">{check}</a>\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"booReject\"\n                      //   onClick={() => removeApplication(application.id)}\n                      >\n                        <a className=\"reject\">{reject}</a>\n                      </button>\n\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </section>\n        </>\n      ) : (\n        <span>Hmm... seems that there are no applications here!</span>\n      )}\n\n      \n    </div>\n  );\n}","/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/pages/Home.js",["89","90","91","92","93","94","95","96","97"],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/queries.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/mutations.js",[],"/Users/emilyburger/Desktop/fsf-projects/group-three-project/Job-Tracker/client/src/utils/Auth.js",[],["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":2,"column":35,"nodeType":"106","messageId":"107","endLine":2,"endColumn":40},{"ruleId":"104","severity":1,"message":"108","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":19},{"ruleId":"104","severity":1,"message":"109","line":11,"column":8,"nodeType":"106","messageId":"107","endLine":11,"endColumn":13},{"ruleId":"104","severity":1,"message":"110","line":2,"column":27,"nodeType":"106","messageId":"107","endLine":2,"endColumn":36},{"ruleId":"111","severity":1,"message":"112","line":34,"column":45,"nodeType":"113","messageId":"114","endLine":34,"endColumn":172},{"ruleId":"111","severity":1,"message":"112","line":43,"column":45,"nodeType":"113","messageId":"114","endLine":43,"endColumn":176},{"ruleId":"111","severity":1,"message":"112","line":52,"column":45,"nodeType":"113","messageId":"114","endLine":52,"endColumn":176},{"ruleId":"111","severity":1,"message":"112","line":61,"column":45,"nodeType":"113","messageId":"114","endLine":61,"endColumn":174},{"ruleId":"111","severity":1,"message":"112","line":84,"column":45,"nodeType":"113","messageId":"114","endLine":84,"endColumn":172},{"ruleId":"104","severity":1,"message":"110","line":2,"column":27,"nodeType":"106","messageId":"107","endLine":2,"endColumn":36},{"ruleId":"104","severity":1,"message":"115","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":19},{"ruleId":"104","severity":1,"message":"116","line":9,"column":13,"nodeType":"106","messageId":"107","endLine":9,"endColumn":20},{"ruleId":"104","severity":1,"message":"117","line":13,"column":11,"nodeType":"106","messageId":"107","endLine":13,"endColumn":19},{"ruleId":"104","severity":1,"message":"115","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":19},{"ruleId":"104","severity":1,"message":"116","line":8,"column":13,"nodeType":"106","messageId":"107","endLine":8,"endColumn":20},{"ruleId":"104","severity":1,"message":"118","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"110","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"116","line":13,"column":11,"nodeType":"106","messageId":"107","endLine":13,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":57,"column":25,"nodeType":"121","endLine":57,"endColumn":46},{"ruleId":"119","severity":1,"message":"120","line":64,"column":25,"nodeType":"121","endLine":64,"endColumn":47},{"ruleId":"104","severity":1,"message":"110","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"116","line":26,"column":11,"nodeType":"106","messageId":"107","endLine":26,"endColumn":18},{"ruleId":"104","severity":1,"message":"122","line":57,"column":26,"nodeType":"106","messageId":"107","endLine":57,"endColumn":31},{"ruleId":"104","severity":1,"message":"123","line":102,"column":24,"nodeType":"106","messageId":"107","endLine":102,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":223,"column":25,"nodeType":"121","endLine":223,"endColumn":46},{"ruleId":"119","severity":1,"message":"120","line":232,"column":25,"nodeType":"121","endLine":232,"endColumn":47},{"ruleId":"119","severity":1,"message":"120","line":240,"column":25,"nodeType":"121","endLine":240,"endColumn":49},{"ruleId":"124","severity":1,"message":"125","line":336,"column":118,"nodeType":"126","messageId":"127","endLine":336,"endColumn":119},{"ruleId":"124","severity":1,"message":"125","line":393,"column":118,"nodeType":"126","messageId":"127","endLine":393,"endColumn":119},{"ruleId":"100","replacedBy":"128"},{"ruleId":"102","replacedBy":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Application' is defined but never used.","'Login' is defined but never used.","'useEffect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useParams' is defined but never used.","'loading' is assigned a value but never used.","'allNotes' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'error' is assigned a value but never used.","'error2' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["130"],["131"],"no-global-assign","no-unsafe-negation"]
>>>>>>> main
