{"version":3,"sources":["pages/Active.js","pages/Rejections.js","pages/Inactive.js","pages/Interviews.js","pages/Home.js","components/NavBar.js","components/Dashboard.js","App.js","index.js"],"names":["Active","Rejections","Inactive","Interviews","Home","class","id","NavBar","currentPage","handlePageChange","style","display","height","overflow","textColor","backgroundColor","href","className","color","onClick","Dashboard","useState","setCurrentPage","page","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAEe,SAASA,IACpB,OAAQ,6CCDG,SAASC,IACpB,OAAQ,gDCDG,SAASC,IACpB,OAAQ,+CCDG,SAASC,IACpB,OAAQ,iDCDG,SAASC,IACpB,OAEI,qBAAKC,MAAM,QAAX,SACA,qBAAKC,GAAG,UAAR,SAEI,0CCmGGC,MAzFf,YAAoD,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,iBAiB3B,OACI,qCAAE,qBAAKJ,MAAM,8CAAX,SACE,qBAAKA,MAAM,OAAX,SACI,oBAAIA,MAAM,+BAAV,iCAEF,sBAAKA,MAAM,MAAX,UACE,qBAAKA,MAAM,QAAX,SACI,qBAAKK,MAAO,CAAEC,QAAS,OAAQC,OAAQ,QAASC,SAAU,kBAA1D,SACI,eAAC,IAAD,CAAYC,UAAU,OAAOC,gBAAgB,OAA7C,UACI,cAAC,IAAD,UACI,mBAAGC,KAAK,QAAQC,UAAU,uBAAuBP,MAAO,CAAEQ,MAAO,WAAaC,QAAS,kBAAMV,EAAiB,SAA9G,oBAIJ,cAAC,IAAD,CAAmBQ,UAAU,kBAA7B,SACI,eAAC,IAAD,WACI,oBAAIA,UAAU,wBAAd,SACI,mBACID,KAAK,UACLG,QAAS,kBAAMV,EAAiB,WAChCQ,UAA2B,WAAhBT,EAA2B,4CAA8C,qCAHxF,uCAOJ,oBAAIS,UAAU,wBAAd,SACI,mBACID,KAAK,cACLG,QAAS,kBAAMV,EAAiB,eAChCQ,UAA2B,eAAhBT,EAA+B,4CAA8C,qCAH5F,0BAOJ,oBAAIS,UAAU,wBAAd,SACI,mBACID,KAAK,YACLG,QAAS,kBAAMV,EAAiB,aAChCQ,UAA2B,aAAhBT,EAA6B,4CAA8C,qCAH1F,wBAOJ,oBAAIS,UAAU,wBAAd,SACI,mBACID,KAAK,cACLG,QAAS,kBAAMV,EAAiB,eAChCQ,UAA2B,eAAhBT,EAA+B,4CAA8C,qCAH5F,sCAexB,qBAAKH,MAAM,QAAX,SACI,qBAAKC,GAAG,UAAR,SAxEQ,SAAhBE,EACO,cAACJ,EAAD,IAEO,WAAhBI,EACK,cAACR,EAAD,IAEW,eAAhBQ,EACK,cAACP,EAAD,IAEW,aAAhBO,EACK,cAACN,EAAD,IAEF,cAACC,EAAD,eCXEiB,MAdf,WACI,MAAsCC,mBAAS,QAA/C,mBAAOb,EAAP,KAAoBc,EAApB,KAKA,OACE,8BACE,cAAC,EAAD,CAAQd,YAAaA,EAAaC,iBAJb,SAACc,GAAD,OAAUD,EAAeC,SCLvCC,EAFH,kBAAM,cAAC,EAAD,KCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.72e35029.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Active() {\n    return (<h1>Active page</h1>\n                );\n}","import React from 'react';\n\nexport default function Rejections() {\n    return (<h1>Rejection page</h1>\n                );\n}","import React from 'react';\n\nexport default function Inactive() {\n    return (<h1>Inactive page</h1>\n                );\n}","import React from 'react';\n\nexport default function Interviews() {\n    return (<h1>Interviews page</h1>\n                );\n}","import React from 'react';\n\nexport default function Home() {\n    return (\n    \n        <div class=\"col-8\">\n        <div id=\"content\">\n\n            <p>Hello</p>\n\n        </div>\n\n    </div>\n    \n    \n\n                );\n}","import React from \"react\";\nimport {\n    CDBSidebar,\n    CDBSidebarContent,\n    CDBSidebarFooter,\n    CDBSidebarHeader,\n    CDBSidebarMenu,\n    CDBSidebarMenuItem,\n} from 'cdbreact';\nimport { NavLink } from 'react-router-dom';\nimport Active from '../pages/Active'\nimport Rejections from '../pages/Rejections'\nimport Inactive from '../pages/Inactive'\nimport Interviews from '../pages/Interviews'\nimport Home from '../pages/Home'\n\n\n\nfunction NavBar({ currentPage, handlePageChange }) {\n    const renderPage = () => {\n        if (currentPage === 'Home') {\n            return <Home />;\n          }\n      if (currentPage === 'Active') {\n        return <Active />;\n      }\n      if (currentPage === 'Rejections') {\n        return <Rejections />;\n      }\n      if (currentPage === 'Inactive') {\n        return <Inactive />;\n      }\n      return <Interviews />;\n    };\n\n    return (\n        <><div class=\"bg-dark text-secondary px-1 py-2 text-start\">\n            <div class=\"py-5\">\n                <h1 class=\"display-5 fw-bold text-white\">My Applications</h1>\n            </div>\n        </div><div class=\"row\">\n                <div class=\"col-4\">\n                    <div style={{ display: 'flex', height: '100vh', overflow: 'scroll initial' }}>\n                        <CDBSidebar textColor=\"#fff\" backgroundColor=\"#333\">\n                            <CDBSidebarHeader>\n                                <a href=\"#Home\" className=\"text-decoration-none\" style={{ color: 'inherit' }} onClick={() => handlePageChange('Home')}>\n                                    Home\n                                </a>\n                            </CDBSidebarHeader>\n                            <CDBSidebarContent className=\"sidebar-content\">\n                                <CDBSidebarMenu>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#active\"\n                                            onClick={() => handlePageChange('Active')}\n                                            className={currentPage === 'Active' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            All Active Applications\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#rejections\"\n                                            onClick={() => handlePageChange('Rejections')}\n                                            className={currentPage === 'Rejections' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Rejections\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#inactive\"\n                                            onClick={() => handlePageChange('Inactive')}\n                                            className={currentPage === 'Inactive' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Inactive\n                                        </a>\n                                    </li>\n                                    <li className=\"nav-item mx-0 mx-lg-1\">\n                                        <a\n                                            href=\"#interviews\"\n                                            onClick={() => handlePageChange('Interviews')}\n                                            className={currentPage === 'Interviews' ? 'nav-link active py-3 px-0 px-lg-3 rounded' : 'nav-link py-3 px-0 px-lg-3 rounded'}>\n                                            Interviews\n                                        </a>\n                                    </li>\n\n\n\n                                </CDBSidebarMenu>\n                            </CDBSidebarContent>\n                        </CDBSidebar>\n                    </div>\n                </div>\n                <div class=\"col-8\">\n                    <div id=\"content\">\n\n                        {renderPage()}\n\n                    </div>\n\n                </div>\n\n            </div></>\n\n\n\n    );\n}\n\nexport default NavBar;\n\n\n","import React, { useState } from 'react';\nimport NavBar from './NavBar';\n\n\n\n\n\nfunction Dashboard() {\n    const [currentPage, setCurrentPage] = useState('Home');\n \n  \n    const handlePageChange = (page) => setCurrentPage(page);\n  \n    return (\n      <div>\n        <NavBar currentPage={currentPage} handlePageChange={handlePageChange} />\n\n      </div>\n    );\n  }\n\nexport default Dashboard;","import React from \"react\";\nimport Dashboard from \"./components/Dashboard\";\n\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}